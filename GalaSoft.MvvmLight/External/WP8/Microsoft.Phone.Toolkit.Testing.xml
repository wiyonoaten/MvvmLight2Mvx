<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Phone.Toolkit.Testing</name>
    </assembly>
    <members>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Test">
            <summary>
            A class containing an Assert method.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.IsNotNull">
            <summary>
            The MethodInfo object used to invoke Assert.IsNotNull.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.AreNotSame">
            <summary>
            The MethodInfo object used to invoke Assert.AreNotSame.
            </summary>        
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.AreNotEqual">
            <summary>
            The MethodInfo object used to invoke Assert.AreNotEqual.
            </summary>        
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.AreSame">
            <summary>
            The MethodInfo object used to invoke Assert.AreSame.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.AreEqual">
            <summary>
            The MethodInfo object used to invoke Assert.AreEqual.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.IsNull">
            <summary>
            The MethodInfo object used to invoke Assert.IsNull.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.IsFalse">
            <summary>
            The MethodInfo object used to invoke Assert.IsFalse.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.IsTrue">
            <summary>
            The MethodInfo object used to invoke Assert.IsTrue.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.FindAnonymousTypeExpressionInString">
            <summary>
            A regular expression which identifies a pattern signifying an 
            anonymous type.  This pattern is emitted by the Expression object 
            when it converts an anonymous type to a string.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.FindTransparentIdentifier">
            <summary>
            A regular expression which identifies a pattern emitted by an
            Expression object when it converts an anonymous type to a
            string.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Test.Assert(System.Linq.Expressions.Expression{System.Func{System.Boolean}})">
            <summary>
            Asserts a condition is true.
            </summary>
            <param name="predicate">The condition that must be true.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Test.Assert(System.Linq.Expressions.Expression{System.Func{System.Boolean}},System.String)">
            <summary>
            Asserts a condition is true.
            </summary>
            <param name="predicate">The condition that must be true.</param>
            <param name="message">The message to be displayed when the test fails.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Test.GetMessageExpression(System.Linq.Expressions.Expression,System.String)">
            <summary>
            Generates an assert failure message using the code block
            responsible for the failure.
            </summary>
            <param name="expression">The predicate that fails.</param>
            <param name="message">The user-provided assertion failure message.
            </param>
            <returns>A constant expression containing the user-provided failure
            message or a description of the expression that failed.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Test.CreateAssertExpressionAction(System.Linq.Expressions.Expression,System.String)">
            <summary>
            Analyzes the expression and creates an action which calls the 
            correct assert method based on its contents.
            </summary>
            <param name="expression">The predicate expression.</param>
            <param name="message">The message to display if an assertion fails.</param>
            <returns>An action which calls the correct assert method.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Test.AssertExpression``1(System.Linq.Expressions.Expression{System.Func{System.Boolean}},System.String)">
            <summary>
            Analyzes a predicate expression and invokes the correct assert 
            method.
            </summary>
            <typeparam name="T">The type of the argument to the predicate.
            </typeparam>
            <param name="predicate">A predicate to be converted into an 
            assert statement.</param>
            <param name="message">The assertion message.</param> 
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Test.CreateBinaryExpressionAction(System.Linq.Expressions.BinaryExpression,System.String)">
            <summary>
            Creates an action from certain types of supported binary expression
            patterns.  If no supported pattern is found null is returned.  Based
            on analyzing the predicate the action invokes the correct Assert
            method.
            </summary>
            <param name="binaryExpression">A binary expression extracted from a
            predicate expression.</param>
            <param name="message">The message to display if the assertion 
            fails.</param>
            <returns>An action that invokes an Assert method.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.AsynchronousAttribute">
            <summary>
            Mark the test method as one which expects asynchronous execution. 
            It is important to call TestComplete() once it is ready or your 
            test will never continue/timeout.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.BugAttribute">
            <summary>
            An attribute that contains known bug information that can be logged 
            during a unit test run. 
            
            When applied to a test method, it will invert the result. This makes it 
            possible to perform automated runs and continuous integration while 
            validating and tracking known issues.
            
            The attribute should have the Fixed bool set to True, or be removed, 
            once the issue is resolved.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.BugAttribute.#ctor">
            <summary>
            Construct a new BugAttribute with no bug description.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.BugAttribute.#ctor(System.String)">
            <summary>
            Construct a new BugAttribute with a bug description.
            </summary>
            <param name="description">Known issue text.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.BugAttribute.ToString">
            <summary>
            Return the bug information.
            </summary>
            <returns>Known issue as a string.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.BugAttribute.Description">
            <summary>
            Gets the bug description.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.BugAttribute.Fixed">
            <summary>
            Gets or sets a value indicating whether the known issue has been 
            fixed. If it has, the attribute is ignored and will not affect 
            test results.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.Converters.DocViewUriConverter">
            <summary>
            Formats an Exception into a valid Uri for documentation Page.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.Converters.DocViewUriConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an <see cref="T:System.Exception"/> object into 
            a well formed Uri string.
            </summary>
            <param name="value">The given Exception or ExpectedException instance.</param>
            <param name="targetType">The type corresponding to the binding property, 
            which must be of <see cref="T:System.String"/>.</param>
            <param name="parameter">(not used).</param>
            <param name="culture">(not used).</param>
            <returns>Returns a Uri string.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.Converters.DocViewUriConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not Implemented
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.Converters.FixTextLengthStyleConverter">
            <summary>
            A Text font size selector based on the length in characters of the value 
            being presented.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.Converters.FixTextLengthStyleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Provides a <see cref="T:System.Windows.Style"/> based on the digit
            length of a given <see cref="T:System.Int32"/> value.
            </summary>
            <param name="value">The given <see cref="T:System.Int32"/> value.</param>
            <param name="targetType">The type corresponding to the binding property, 
            which must be of <see cref="T:System.Windows.Style"/>.</param>
            <param name="parameter">(Not used).</param>
            <param name="culture">(Not used).</param>
            <returns>A <see cref="T:System.Windows.Style"/> appropriate for the length of the content.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.Converters.FixTextLengthStyleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not Supported.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.Converters.MethodPassedColorConverter">
            <summary>
            A color selection converter for translating a bool result into
            a color.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.Converters.MethodPassedColorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a boolean value into a <see cref="T:System.Windows.Media.SolidColorBrush"/> value.
            </summary>
            <param name="value">The boolean value.</param>
            <param name="targetType">(not used)</param>
            <param name="parameter">(not used)</param>
            <param name="culture">(not used)</param>
            <returns>A <see cref="T:System.Windows.Media.SolidColorBrush"/> representing pass or failure.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.Converters.MethodPassedColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not Supported.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.DataManager">
            <summary>
            Manages the unit test status and model by attaching to the unit test
            harness instance. Validates that all key logging can be done without
            special hooks inside of the unit test harness implementation.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.DataManager._h">
            <summary>
            The unit test harness instance.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.DataManager._d">
            <summary>
            The test run data.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.DataManager._assemblyData">
            <summary>
            Map assembly metadata to data objects.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.DataManager._classData">
            <summary>
            Map test class metadata to data objects.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.DataManager._methodData">
            <summary>
            Map test metadata to data objects.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.DataManager._lastResult">
            <summary>
            Backing field for the last result.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.DataManager._lastFailingResult">
            <summary>
            Backing field for the last failing result.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DataManager.#ctor(Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes a new instance of the DataManager type.
            </summary>
            <param name="harness">The unit test harness instance.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DataManager.Create(Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes a new instance of the DataManager.
            </summary>
            <param name="harness">The unit test harness instance.</param>
            <returns>Returns a new instance of a DataManager class.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DataManager.Hook">
            <summary>
            Connect to unit test harness events for processing and updating the
            underlying unit test run model.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DataManager.Unhook">
            <summary>
            Unhook from the unit test harness events.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DataManager.OnTestRunStarting(System.Object,Microsoft.Phone.Testing.Harness.TestRunStartingEventArgs)">
            <summary>
            Process the starting of the test run.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DataManager.OnTestClassStarting(System.Object,Microsoft.Phone.Testing.Harness.TestClassStartingEventArgs)">
            <summary>
            Process the test class starting event.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DataManager.OnTestClassCompleted(System.Object,Microsoft.Phone.Testing.Harness.TestClassCompletedEventArgs)">
            <summary>
            Process the test class complete event.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DataManager.OnTestMethodStarting(System.Object,Microsoft.Phone.Testing.Harness.TestMethodStartingEventArgs)">
            <summary>
            Process the start of a test method.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DataManager.OnTestMethodCompleted(System.Object,Microsoft.Phone.Testing.Harness.TestMethodCompletedEventArgs)">
            <summary>
            Process the completion of test methods.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DataManager.ProcessResult(Microsoft.Phone.Testing.Harness.ScenarioResult)">
            <summary>
            Process a result.
            </summary>
            <param name="result">The result data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DataManager.GetAssemblyModel(Microsoft.Phone.Testing.Metadata.IAssembly)">
            <summary>
            Gets or creates the data model object for an assembly.
            </summary>
            <param name="assembly">The test assembly.</param>
            <returns>Returns the data object.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DataManager.GetClassModel(Microsoft.Phone.Testing.Metadata.ITestClass)">
            <summary>
            Gets or creates the data model object for a test class.
            </summary>
            <param name="testClass">The test class.</param>
            <returns>Returns the data object.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DataManager.GetMethodModel(Microsoft.Phone.Testing.Metadata.ITestMethod,Microsoft.Phone.Testing.Client.TestClassData)">
            <summary>
            Gets or creates the data model object for a test method.
            </summary>
            <param name="testMethod">The test method.</param>
            <param name="parentTestClass">The parent test class data object.</param>
            <returns>Returns the data object.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.DataManager.UnitTestHarness">
            <summary>
            Gets the unit test harness instance.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.DataManager.Data">
            <summary>
            Gets the unit test model.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.DocView">
            <summary>
            Provides a Browser page to navigate to MSDN documentation
            for exceptions found on the results.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DocView.#ctor">
            <summary>
            Initializes the DocView instance.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DocView.OnNavigatedTo(System.Windows.Navigation.NavigationEventArgs)">
            <summary>
            Overrides the navigation event when arriving to the page, to collect
            the query string parameters.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.DocView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.InitViewModel">
            <summary>
            This class has a temporal view model to initialize the view
            before any test data is available or configured.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.PropertyChangedBase">
            <summary>
            A base class for model objects that implement the property
            changed interface, to simplify calling the change handlers,
            and cache the underlying event argument instances.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.PropertyChangedBase._argumentInstances">
            <summary>
            A static set of change argument instances, eventually
            storing one argument instance for each property name to
            reduce churn at runtime.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.PropertyChangedBase.NotifyPropertyChanged(System.String)">
            <summary>
            Notify any listeners that the property value has changed.
            </summary>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="E:Microsoft.Phone.Testing.Client.PropertyChangedBase.PropertyChanged">
            <summary>
            The property changed event.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.InitViewModel.#ctor">
            <summary>
            Initializes the view model with initial values.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.InitViewModel.PassedScenarios">
            <summary>
            Gets the Passed Scenarios counter.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.InitViewModel.FailedScenarios">
            <summary>
            Gets the Failed Scenarios counter.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.InitViewModel.TotalScenarios">
            <summary>
            Gets the Total Scenarios counter.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.IProvideResultReports">
            <summary>
            A type that provides a string result report.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.IProvideResultReports.GetResultReport">
            <summary>
            Generates a simple text result report for the metadata.
            </summary>
            <returns>Reports a text report.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.Resources.ResourceWrapper">
            <summary>
            Exposes the string resources to be used as binding expression in XAML code.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.Resources.ResourceWrapper.appStrings">
            <summary>
            Instance of the Resource file.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.Resources.ResourceWrapper.AppStrings">
            <summary>
            Application string resource dictionary to be used in XAML.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.TagEditor">
            <summary>
            The TagEditor control provides a brief user interface allowing for the
            selection of a set of tests, used to filter the test run.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TagEditor.TagHistoryKey">
            <summary>
            Key used to lookup the TagHistory site setting.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TagEditor._runButton">
            <summary>
            Holds a reference to the Application Bar run button.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TagEditor.#ctor(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the TagEditor type. Also includes a
            set of sample tags for display to the end user.
            </summary>
            <param name="initialTagExpression">The tag expression to use.</param>
            <param name="sampleTags">Sample tags to display.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TagEditor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TagEditor type.
            </summary>
            <param name="initialTagExpression">The tag expression to use.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TagEditor.#ctor">
            <summary>
            Initializes a new instance of the TagEditor type.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TagEditor.OnRunButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handle the click event for the Run Tests button.
            </summary>
            <param name="sender">Run Button.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TagEditor.OnComplete(Microsoft.Phone.Testing.Client.TagExpressionEventArgs)">
            <summary>
            Fires the Complete event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TagEditor.CreateSuggestedTag(System.String)">
            <summary>
            Creates a new suggested tag item for sample and previous tags.
            </summary>
            <param name="content">The tag content.</param>
            <returns>Returns a new instance.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TagEditor.OnSampleTagTap(System.Object,System.Windows.Input.GestureEventArgs)">
            <summary>
            Handles the selection of a tag expression from the list.
            </summary>
            <param name="sender">The <see cref="T:System.Windows.Controls.ListBox"/> that fires the event.</param>
            <param name="e">Information about the tap event.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TagEditor.TagsToggle_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the selection of test execution schema.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TagEditor.TagsToggle_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the selection of test execution schema.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TagEditor.RunTests">
            <summary>
            Run the unit tests.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TagEditor.TagExpressionTextBox_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Handles the changes on the tag expression to run tests.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TagEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TagEditor.TagHistory">
            <summary>
            Gets or sets the tag history.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.Client.TagEditor.Complete">
            <summary>
            An event that indicates that the tag editor is complete. This can be
            in response to many actions: the user entering a tag expression, the
            time expiring and the default being selected, or the selection being
            canceled.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.TestMethodDetails">
            <summary>
            Details view for test method data.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestMethodDetails.#ctor">
            <summary>
            Initializes a new instance of the page.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestMethodDetails.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.TestPage">
            <summary>
            A user control designed for mobile platforms. The control should be used
            as the root visual for a Silverlight plugin if developers would like to 
            use the advanced TestSurface functionality.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.ITestPage">
            <summary>
            An interface for any test page instances to implement.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.ITestPage.TestPanel">
            <summary>
            Gets the test panel instance.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestPage._harness">
            <summary>
            Backing field for the unit test harness instance.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestPage._delayedInitializationTimer">
            <summary>
            Backing field for the startup timer.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestPage._model">
            <summary>
            Backing field for the model manager.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestPage._saveButton">
            <summary>
            Holds a reference to the Application Bar save button.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestPage._emailButton">
            <summary>
            Holds a reference to the Application Bar email button.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestPage.#ctor">
            <summary>
            Initializes a new instance of the MobileTestPage class.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestPage.#ctor(Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes the MobileTestPage object.
            </summary>
            <param name="harness">The test harness instance.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestPage.OnSaveResultsButtonClick(System.Object,System.EventArgs)">
            <summary>
            Saves the context results to the the application
            isolated storage area.
            </summary>
            <param name="sender">The event source.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestPage.OnEmailResultsButtonClick(System.Object,System.EventArgs)">
            <summary>
            Fires the Email Task to send context results to the designated email
            address.
            </summary>
            <param name="sender">The event source.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestPage.CollectContextResults(System.Boolean)">
            <summary>
            Collects the test results on a string representation.
            </summary>
            <param name="recursive">Indicates if the results are gathered with
            details.</param>
            <returns>A string containing the result text.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestPage.MethodDetailToString(Microsoft.Phone.Testing.Client.TestMethodData)">
            <summary>
            Formats the test method data into a string.
            </summary>
            <param name="methodData">The test method data</param>
            <returns>A string representing the test method data.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestPage.OnDelayedInitializationTick(System.Object,System.EventArgs)">
            <summary>
            Waits for the Settings to become available, either by the service or
            system setting the instance property.
            </summary>
            <param name="sender">The source timer.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestPage.OnBackKeyPress(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Handles the interception of the back key 
            button to determine what action to take.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestPage.OnTagExpressionSelected(System.Object,Microsoft.Phone.Testing.Client.TagExpressionEventArgs)">
            <summary>
            Handles the completion event on the tag expression editor to begin
            the test run using the user-provided settings.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestPage.StartTestRun">
            <summary>
            Starts the test run.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestPage.OnTestHarnessCompleted(System.Object,Microsoft.Phone.Testing.Harness.TestHarnessCompletedEventArgs)">
            <summary>
            Handles the test harness complete event, to display results.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestPage.OnMethodItemTap(System.Object,System.Windows.Input.GestureEventArgs)">
            <summary>
            Shows the method results details.
            </summary>
            <param name="sender">The <see cref="T:System.Windows.Controls.ListBoxItem"/> that fires the event.</param>
            <param name="e">Information about the gesture.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestPage.TestPanel">
            <summary>
            Gets the test surface, a dynamic Panel that removes its children 
            elements after each test completes.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestPage.UnitTestHarness">
            <summary>
            Gets the unit test harness instance.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.TagExpressionEventArgs">
            <summary>
            A class for storing event information relating to a user's selected
            tag expression for a test run.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TagExpressionEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TagExpression event arguments
            class.
            </summary>
            <param name="tagExpression">The tag expression.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TagExpressionEventArgs.TagExpression">
            <summary>
            Gets the tag expression stored in the event arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TagExpressionEventArgs.HasTagExpression">
            <summary>
            Gets a value indicating whether a tag expression has been set.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.TestAssemblyData">
            <summary>
            A data object storing the hierarchical results for a test assembly in a
            test run.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestAssemblyData.#ctor(Microsoft.Phone.Testing.Metadata.IAssembly)">
            <summary>
            Initializes a new instance of the TestAssemblyData type.
            </summary>
            <param name="testAssembly">The test assembly metadata.</param>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestAssemblyData._expanded">
            <summary>
            Backing field for the expanded property.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestAssemblyData._passed">
            <summary>
            Backing field for a passed value.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestAssemblyData._classes">
            <summary>
            Backing store for the set of test class.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestAssemblyData.UpdateCounts">
            <summary>
            Notifies changes on properties caused by
            children objects.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestAssemblyData.GetResultReport">
            <summary>
            Retrieves the results report.
            </summary>
            <returns>Returns a string containing the report.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestAssemblyData.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the item is expanded in
            a hierarchical display.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestAssemblyData.IsChecked">
            <summary>
            Gets or sets the checked value. Don't think this is actually used.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestAssemblyData.Passed">
            <summary>
            Gets or sets a value indicating whether the test passed. If failed,
            will propagate to the parent metadata object.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestAssemblyData.Name">
            <summary>
            Gets the name of the assembly.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestAssemblyData.TestClasses">
            <summary>
            Gets an observable collection of test class data objects.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestAssemblyData.PassCount">
            <summary>
            Reports the number of methods that has 
            passed under the current assembly.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestAssemblyData.FailCount">
            <summary>
            Reports the number of methods that has
            failed under the current assembly.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.TestClassData">
            <summary>
            A data object that generates property change notifications and can
            be used for rich data binding to test results. Does keep a reference
            to all results.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestClassData._parent">
            <summary>
            Parent object reference.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestClassData.#ctor(Microsoft.Phone.Testing.Metadata.ITestClass,Microsoft.Phone.Testing.Client.TestAssemblyData)">
            <summary>
            Initializes a new instance of the TestClassData type.
            </summary>
            <param name="testClass">The test class metadata.</param>
            <param name="parent">The parent test assembly data object.</param>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestClassData._methods">
            <summary>
            Backing store for the set of test class.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestClassData._expanded">
            <summary>
            Backing field for the expanded property.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestClassData.CollapseUnlessFailures">
            <summary>
            Collapses the test class node unless there is at least one child
            test method that failed.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestClassData._passed">
            <summary>
            Backing field for a passed value.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestClassData.UpdateCounts">
            <summary>
            Notifies changes on properties caused by
            children objects.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestClassData.GetResultReport">
            <summary>
            Retrieves the results report.
            </summary>
            <returns>Returns a string containing the report.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestClassData.Parent">
            <summary>
            Gets the parent data object.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestClassData.Name">
            <summary>
            Gets the name of the test class.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestClassData.Namespace">
            <summary>
            Gets the namespace for the test class.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestClassData.TestMethods">
            <summary>
            Gets an observable collection of test class data objects.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestClassData.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the item is expanded in
            a hierarchical display.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestClassData.IsChecked">
            <summary>
            Gets or sets the checked value. Don't think this is actually used.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestClassData.Passed">
            <summary>
            Gets or sets a value indicating whether the test passed. If failed,
            will propagate to the parent metadata object.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestClassData.PassCount">
            <summary>
            Reports the number of methods that has
            passed under the current class.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestClassData.FailCount">
            <summary>
            Reports the number of methods that has
            failed under the current class.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.TestMethodData">
            <summary>
            A data object that generates property change notifications and can
            be used for rich data binding to test results. Does keep a reference
            to all results.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestMethodData._metadata">
            <summary>
            Stores the test method metadata.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestMethodData._parent">
            <summary>
            Parent data object.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestMethodData._isRunning">
            <summary>
            A value indicating whether the test is currently executing.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestMethodData._result">
            <summary>
            The test outcome.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestMethodData._previous">
            <summary>
            Backing field for linked data.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestMethodData._next">
            <summary>
            Backing field for linked data.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestMethodData._previousFailure">
            <summary>
            Backing field for linked data.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestMethodData._nextFailure">
            <summary>
            Backing field for linked data.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestMethodData.#ctor(Microsoft.Phone.Testing.Metadata.ITestMethod,Microsoft.Phone.Testing.Client.TestClassData)">
            <summary>
            Initializes a new instance of the TestMethodData type.
            </summary>
            <param name="testMethod">The test method metadata.</param>
            <param name="parent">The test class that is the parent object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestMethodData.CheckForKnownBugs">
            <summary>
            Runs through the metadata for bugs.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestMethodData._knownBugs">
            <summary>
            Backing field for known bugs.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestMethodData._fixedBugs">
            <summary>
            Backing field for bugs that are marked fixed.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestMethodData.EvaluateNotable">
            <summary>
            Calculates whether the item is considered "notable", in that it
            should have a visual cue or hint for the user.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestMethodData._isNotable">
            <summary>
            Stores a value indicating whether the result is notable.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestMethodData._checked">
            <summary>
            Backing field for the checked property.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestMethodData._expanded">
            <summary>
            Backing field for the expanded property.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestMethodData.GetResultReport">
            <summary>
            Retrieves the results report.
            </summary>
            <returns>Returns a string containing the report.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.Result">
            <summary>
            Gets or sets the result of the test method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.ExceptionMessage">
            <summary>
             Gets the exception message from the result, xml decoding 
             any instances of less than or greater than.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.KnownBugs">
            <summary>
            Gets the known bugs for display in the UI.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.FixedBugs">
            <summary>
            Gets the fixed bugs for display.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.SimplifiedExpectedExceptionName">
            <summary>
            Gets the expected exception name for a negative test, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.SimplifiedExceptionStackTrace">
            <summary>
            Gets a simplified exception stack trace that omits the trace below
            the invoke of the test method by the test framework.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.SimplifiedExceptionName">
            <summary>
            Gets the short, simple name of the exception type recorded in the
            test result, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.SimplifiedInnerExceptionName">
            <summary>
            Gets the short, simple name of the inner exception type recorded in
            the test result, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.HasOutcome">
            <summary>
            Gets a value indicating whether the method has results.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.Passed">
            <summary>
            Gets a value indicating whether the method has passed. Returns 
            true until there is a result.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.IsRunning">
            <summary>
            Gets or sets a value indicating whether the test method is running.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.IsNotable">
            <summary>
            Gets or sets a value indicating whether the result is notable. 
            Notable is defined as either currently running, or not having 
            passed. This can allow a user interface to react to an 
            interesting result.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.Parent">
            <summary>
            Gets the parent data object.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.Metadata">
            <summary>
            Gets an instance of the actual metadata object.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.Name">
            <summary>
            Gets the name of the test method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.HasDescriptionVisibility">
            <summary>
            Gets a visibility value to allow for easy showing or
            hiding of a user interface component that displays the
            description.
            </summary>
            <returns>Returns a visibility value.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.ReadableElapsedTime">
            <summary>
            Gets the elapsed time in a readable format.
            </summary>
            <returns>Returns a string of the readable time elapsed.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.Description">
            <summary>
            Gets the description of the test method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.IsChecked">
            <summary>
            Gets or sets a value indicating whether the item is checked in the
            user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the item is expanded in
            a hierarchical display.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.PreviousResult">
            <summary>
            Gets or sets the previous result.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.NextResult">
            <summary>
            Gets or sets the next result.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.PreviousFailingResult">
            <summary>
            Gets or sets the previous failing result.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestMethodData.NextFailingResult">
            <summary>
            Gets or sets the next failing result.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.TestResultPlainData">
            <summary>
            Structure that holds information about plain text test results.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestResultPlainData.FileName">
            <summary>
            filename for results to be stored.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestResultPlainData.Text">
            <summary>
            Test results on plain text.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.TestRunData">
            <summary>
            A data object that generates property change notifications and can
            be used for rich data binding to test results. Does keep a reference
            to all results.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestRunData._harness">
            <summary>
            The unit test harness instance.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TestRunData.#ctor(Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes a new instance of the test run results.
            </summary>
            <param name="unitTestHarness">The unit test harness.</param>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestRunData._assemblies">
            <summary>
            Backing store for the set of test assemblies.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestRunData._title">
            <summary>
            Title backing field.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestRunData._total">
            <summary>
            Stores the total number of expected scenarios.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestRunData._currentTestMethod">
            <summary>
            Stores the current test information.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestRunData._currentTest">
            <summary>
            Stores the current test information.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestRunData._runScenarios">
            <summary>
            Stores the number of run scenarios.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestRunData._failedScenarios">
            <summary>
            Count of failed scenarios.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Client.TestRunData._running">
            <summary>
            Backing field for whether the app is running.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestRunData.UnitTestHarness">
            <summary>
            Gets the unit test harness instance.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestRunData.TestAssemblies">
            <summary>
            Gets an observable collection of test assembly data objects.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestRunData.Title">
            <summary>
            Gets or sets the informational run title.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestRunData.TotalScenarios">
            <summary>
            Gets or sets the number of total scenarios.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestRunData.CurrentTestMethod">
            <summary>
            Gets or sets the current test name.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestRunData.CurrentTest">
            <summary>
            Gets or sets the current test name.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestRunData.RunScenarios">
            <summary>
            Gets or sets the number of run scenarios.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestRunData.FailedScenarios">
            <summary>
            Gets or sets the number of failed scenarios.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestRunData.PassedAndComplete">
            <summary>
            Gets a value indicating whether the run is complete and passed.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestRunData.Passed">
            <summary>
            Gets a value indicating whether all passing results have been
            processed.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestRunData.PassedScenarios">
            <summary>
            Gets the number of passed scenarios, defined as the number of
            run scenarios minus the number of failed scenarios tracked.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestRunData.IsDispatcherRunning">
            <summary>
            Gets a value indicating whether the dispatcher is currently running.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Client.TestRunData.IsRunning">
            <summary>
            Gets a value indicating whether the test run is in action.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.TimeHelper">
            <summary>
            A set of simple time helper methods.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TimeHelper.ElapsedReadableTime(System.DateTime,System.DateTime)">
            <summary>
            Returns a human-readable formatting of the time different between 
            two DateTime instances.
            </summary>
            <param name="start">The starting time.</param>
            <param name="finish">The finishing time.</param>
            <returns>Returns a human-readable string.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TimeHelper.ElapsedReadableTime(System.TimeSpan)">
            <summary>
            Returns a human-readable formatting of the time different between 
            two DateTime instances.
            </summary>
            <param name="ts">The time span instance.</param>
            <returns>Returns a human-readable string.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.TimeHelper.Plural(System.String,System.Int32)">
            <summary>
            A plural 's' as the suffix, when not equal to one.
            </summary>
            <param name="value">The string value.</param>
            <param name="number">The number to check.</param>
            <returns>Returns an empty string or the English plural 's'.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Client.Converters.VisibilityConverter">
            <summary>
            A value converter for collapsing or showing elements.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.Converters.VisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert a boolean value to a Visibility value.
            </summary>
            <param name="value">The value instance.</param>
            <param name="targetType">The target parameter.</param>
            <param name="parameter">ConverterParameter is of type Visibility.</param>
            <param name="culture">The culture parameter.</param>
            <returns>Returns the object.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.Converters.VisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Support two-way databinding of the VisibilityConverter, converting 
            Visibility to a bool.
            </summary>
            <param name="value">The value instance.</param>
            <param name="targetType">The target parameter.</param>
            <param name="parameter">ConverterParameter is of type Visibility.</param>
            <param name="culture">The culture parameter.</param>
            <returns>Returns the object.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.Converters.VisibilityConverter.GetVisibilityMode(System.Object)">
            <summary>
            Determine the visibility mode based on a converter parameter. This
            parameter is of type Visibility,and specifies what visibility value
            to return when the boolean value is true.
            </summary>
            <param name="parameter">The parameter object.</param>
            <returns>Returns a Visibility value.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Client.Converters.VisibilityConverter.IsVisibilityInverted(System.Object)">
            <summary>
            Determine whether or not visibility is inverted based on a converter
            parameter. When the parameter is specified as Collapsed, that means
            that when the boolean value is true, we should return Collapsed,
            which is inverted.
            </summary>
            <param name="parameter">The parameter object.</param>
            <returns>Returns a value indicating whether the visibility is 
            inverted.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.AssemblyManager">
            <summary>
            Container and manager type which handles an entire test assembly; contains sub work 
            items that represent all actions needed to execute its tests.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.UnitTestCompositeWorkItem">
            <summary>
            A container that stores instances of the unit test harness and provider.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.CompositeWorkItem">
            <summary>
            WorkItem which can contain sub-tasks; the underlying work item is 
            not marked complete until the Children have completed or an Exception 
            is thrown.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.WorkItem">
            <summary>
            A test work item is a task that is invoked until it is complete.  It 
            maintains its own state to be able to notify the caller when it is 
            finally complete, with no further work to be run.
            
            It is possible that some implementations of a TestWorkItem may actually 
            contain a set of sub-tasks by implementing a composite pattern.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.WorkItem._canExecuteImmediately">
            <summary>
            A value indicating whether the task can immediately execute.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItem.Invoke">
            <summary>
            Invoke the task.  Return false only when the task is complete.
            </summary>
            <returns>True if there is additional work to be completed.  False 
            when there is none.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItem.WorkItemComplete">
            <summary>
            Called by the task after the work is complete.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.WorkItem.IsComplete">
            <summary>
            Gets a value indicating whether the task's work is complete.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.WorkItem.CanExecuteImmediately">
            <summary>
            Gets or sets a value indicating whether the work item can be
            executed immediately, and does not rely on special asynchronous
            operation. Used for performance improvements. The setter is also
            public.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.CompositeWorkItem._children">
            <summary>
            Store the underlying tasks.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.CompositeWorkItem._finishWhenEmpty">
            <summary>
            Whether the CompositeWorkItem::IsComplete should be set to true 
            after all children have been de-queued.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.CompositeWorkItem._invoked">
            <summary>
            Whether the first invoke has happened yet or not.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.#ctor">
            <summary>
            Constructor for the CompositeWorkItem type.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.FirstInvoke">
            <summary>
            Optional method to call on the first invoke.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.Invoke">
            <summary>
            Invoke the test container; in turn will execute child work items 
            as needed. Supports executing multiple items immediately for
            performance reasons.
            </summary>
            <returns>True if additional work remains, False once IsComplete 
            is set to true.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.Invoke(Microsoft.Phone.Testing.WorkItem@)">
            <summary>
            Invoke the test container; in turn will execute child work items 
            as needed.
            </summary>
            <param name="usedWorkItem">The work item used for the invoke.</param>
            <returns>True if additional work remains, False once IsComplete 
            is set to true.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.ClearChildren">
            <summary>
            Clear the children.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.Dequeue">
            <summary>
            Dequeue a work item.
            </summary>
            <returns>A work item.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.Enqueue(Microsoft.Phone.Testing.WorkItem)">
            <summary>
            Add a new work item to the container to schedule it for invocation.
            </summary>
            <param name="item">New test work item to enqueue.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.EnqueueQuick(Microsoft.Phone.Testing.WorkItem)">
            <summary>
            Adds a new work item that will execute more quickly.
            </summary>
            <param name="item">The item of work.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.EnqueueQuick(System.Action)">
            <summary>
            Enqueues a callback or action that will quickly execute.
            </summary>
            <param name="action">The action or method.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.Enqueue(System.Action)">
            <summary>
            Add a new callback action and schedule it for invocation.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.Peek">
            <summary>
            Return the top work item, if any, from this container.
            </summary>
            <returns>Peek into any test work item.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.WorkItemComplete">
            <summary>
            Work items must call this method to indicate completion of the work 
            item; in turn fires the Complete event delegates.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.WorkItemCompleteInternal">
            <summary>
            Internal-only version which can be called during a test completion 
            through the relation - not necessarily the best design; events 
            may make more sense long-term.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.WorkItemException(System.Exception)">
            <summary>
            Call when an exception occurs inside a work item.
            </summary>
            <param name="e">Exception object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.OnComplete(System.EventArgs)">
            <summary>
            Fire the Complete event.
            </summary>
            <param name="e">Empty event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CompositeWorkItem.OnUnhandledException(System.Exception)">
            <summary>
            Fire the unhandled exception event.
            </summary>
            <param name="exception">Exception object.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.CompositeWorkItem.FinishWhenEmpty">
            <summary>
            Gets a value indicating whether the container is marked Complete 
            when all children have executed or not.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.CompositeWorkItem.RemainingWork">
            <summary>
            Gets a value indicating whether sub tasks remain.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.Harness.CompositeWorkItem.Complete">
            <summary>
            Complete event is fired when the underlying WorkItemComplete method 
            is called by the work item.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.Harness.CompositeWorkItem.UnhandledException">
            <summary>
            Event fired when an exception is thrown and unhandled within the 
            underlying Invoke sequence.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.CompositeWorkItem.CanExecuteImmediately">
            <summary>
            Gets or sets a value indicating whether the task can execute
            immediately.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestCompositeWorkItem._provider">
            <summary>
            The unit test provider.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestCompositeWorkItem.#ctor(Microsoft.Phone.Testing.Harness.UnitTestHarness,Microsoft.Phone.Testing.Metadata.IUnitTestProvider)">
            <summary>
            Initializes a new unit test work item container.
            </summary>
            <param name="testHarness">The unit test harness.</param>
            <param name="unitTestProvider">The unit test metadata provider.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestCompositeWorkItem.LogMessage(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Logs a new message.
            </summary>
            <param name="message">Message object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestCompositeWorkItem.LogMessage(System.String)">
            <summary>
            Logs a message about the harness.
            </summary>
            <param name="harnessInformation">Information about the harness.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestCompositeWorkItem.LogWriter">
            <summary>
            Gets the log message writer for the unit test system.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestCompositeWorkItem.TestHarness">
            <summary>
            Gets the test harness instance.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestCompositeWorkItem.Provider">
            <summary>
            Gets the unit test provider instance.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.AssemblyManager._filter">
            <summary>
            The test run filter object.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.AssemblyManager._assembly">
            <summary>
            Unit test provider-agnostic assembly metadata.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.AssemblyManager._testClasses">
            <summary>
            Container of work items for running test classes.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.AssemblyManager.#ctor(Microsoft.Phone.Testing.Harness.TestRunFilter,Microsoft.Phone.Testing.Harness.UnitTestHarness,Microsoft.Phone.Testing.Metadata.IUnitTestProvider,Microsoft.Phone.Testing.Metadata.IAssembly)">
            <summary>
            Create a new assembly manager, takes in the harness, provider 
            reference and actual IAssembly object.
            </summary>
            <param name="runFilter">The test run filter object.</param>
            <param name="testHarness">Harness object.</param>
            <param name="provider">The unit test metadata provider.</param>
            <param name="testAssembly">The test assembly metadata object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.AssemblyManager.FirstInvoke">
            <summary>
            When the test run is ready to test the underlying test assembly that
            this class manages, perform reflection and enqueue work items to run
            the tests.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.AssemblyManager.EnqueueAssemblyInitialize">
            <summary>
            The assembly initialize method.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.AssemblyManager.EnqueueAssemblyCleanup">
            <summary>
            The assembly cleanup method.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.AssemblyManager.EnqueueTestClasses">
            <summary>
            Reflect over all test classes in the assembly and add any which are not 
            filtered out into the test work item queue.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.AssemblyManager.EnqueueMethodDispatcher(System.Reflection.MethodInfo)">
            <summary>
            Helper to enqueue a new method dispatcher.
            </summary>
            <param name="method">The method reflection object.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.AssemblyManager.ClassInstances">
            <summary>
            Gets the collection of all the instances of the assembly's test
            classes, used to keep a single reference of the type.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.CallbackWorkItem">
            <summary>
            A work item for tests to use which will call the delegate when the work 
            item is executed.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.CallbackWorkItem._action">
            <summary>
            Stored void delegate.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CallbackWorkItem.#ctor(System.Action)">
            <summary>
            Create a new Callback work item.
            </summary>
            <param name="callback">Action to execute on Invoke.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.CallbackWorkItem.Invoke">
            <summary>
            Execute the callback.
            </summary>
            <returns>Whether the work item is complete.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.ConditionalWorkItem">
            <summary>
            A test work item that is complete once the condition is asserted.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.ConditionalWorkItem._delegate">
            <summary>
            The conditional delegate.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ConditionalWorkItem.#ctor(System.Func{System.Boolean})">
            <summary>
            Construct a new conditional work item.
            </summary>
            <param name="conditionalMethod">Conditional delegate.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ConditionalWorkItem.Invoke">
            <summary>
            Invoke the condition, will continue invoking until 
            the condition is false.
            </summary>
            <returns>Completes the invocation once the condition is true.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.DebugOutputProvider">
            <summary>
            The most verbose log provider, this calls .ToString() on each and every 
            LogMessage that it processes.  The output will appear in an attached 
            debugger's "Output" window.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.LogProvider">
            <summary>
            LogProvider interface with a single Process method that handles a
            LogMessage object.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogProvider._conditionalHandlers">
            <summary>
            A dictionary of conditional action handlers.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogProvider._definedHandlers">
            <summary>
            A dictionary of types/actions for handling specific types of log
            messages.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogProvider.Process(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Perform any needed operations to log the message.
            </summary>
            <param name="logMessage">Instance of LogMessage type.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogProvider.ProcessRemainder(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Method that processes any messages not handled any other way.
            </summary>
            <param name="message">The log message.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogProvider.RegisterMessageTypeHandler(Microsoft.Phone.Testing.Harness.LogMessageType,System.Action{Microsoft.Phone.Testing.Harness.LogMessage})">
            <summary>
            Registers an action for a specific message type.
            </summary>
            <param name="type">The type of interest.</param>
            <param name="action">The handler for the type.  Takes a LogMessage 
            parameter.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogProvider.RegisterConditionalHandler(System.Func{Microsoft.Phone.Testing.Harness.LogMessage,System.Boolean},System.Action{Microsoft.Phone.Testing.Harness.LogMessage})">
            <summary>
            Registers a conditional handler.  During the log message processing 
            step, all conditional callbacks will be tried.  The first positive 
            result will then call the associated processing Action for that 
            conditional method entry.
            </summary>
            <param name="condition">A conditional callback that takes a 
            LogMessage input parameter.</param>
            <param name="action">A log message processing Action that is called 
            when the condition is true.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogProvider.UnregisterConditionalHandler(System.Func{Microsoft.Phone.Testing.Harness.LogMessage,System.Boolean})">
            <summary>
            Removes a conditional callback.
            </summary>
            <param name="condition">The condition.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogProvider.ClearConditionalHandlers">
            <summary>
            Clear all existing conditional handlers.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogProvider.ClearMessageTypeHandlers">
            <summary>
            Clear all existing message type handlers.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.DebugOutputProvider.#ctor">
            <summary>
            Initializes a new instance of the DebugOutputProvider class.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.DebugOutputProvider.Process(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Display a LogMessage in the debug output window.
            </summary>
            <param name="logMessage">Message object.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.DebugOutputProvider.ShowAllFailures">
            <summary>
            Gets or sets a value indicating whether any TestResult failures will 
            be reported, regardless of whether the TestResult type is being 
            monitored for debug output.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.DebugOutputProvider.ShowEverything">
            <summary>
            Gets or sets a value indicating whether all messages appear in the 
            debug output.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.DecoratorDictionary">
            <summary>
            A dictionary that can store just about any kind of object, keyed off any
            object.  As a Hashtable, it permits using keys of 
            - enums
            - objects
            - types
            
            This makes it ideal for use in decorating and adorning special types in
            the system, such as log messages.
            
            A strongly-typed decorator key could come from an enum value, while a
            prototype extension to the test system could simply use a string key for
            organizing.  
            
            In all instances, the resulting object needs to be cast appropriately.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.DecoratorDictionary.HasDecorator(System.Object)">
            <summary>
            Check if a decorator exists.
            </summary>
            <param name="decoratorKey">The decorator key object.</param>
            <returns>
            Returns a value indicating whether the decorator key exists.  Even
            if the key exists, the instance value for the key could be set to
            null, yielding a null instance.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.DecoratorDictionary.HasDecorators(System.Object[])">
            <summary>
            Check if a set of decorators exists.
            </summary>
            <param name="decorators">The set of decorator(s) of interest.</param>
            <returns>
            Returns a value indicating whether the decorators of interest were
            present.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.DecoratorDictionary.GetDecorator(System.Object)">
            <summary>
            Retrieves the decorator instance if it exists.  If not, this method
            returns null.
            </summary>
            <param name="decoratorKey">The decorator key object.</param>
            <returns>
            Returns the instance or null if it does not exist.  No exceptions
            are thrown in this method.
            </returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.FastRunDispatcher">
            <summary>
            A type which handles preparing the underlying dispatcher or timer from 
            which the test work items execute.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.RunDispatcher">
            <summary>
            Handle calling into the test framework as needed to perform the test
            run, process the internal test dispatcher queue, and keep execution
            moving forward.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.RunDispatcher._runNextStep">
            <summary>
            Delegate that returns whether more work remains and runs the next
            set of work.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.RunDispatcher._running">
            <summary>
            Backing field for a value indicaing whether the dispatcher should be
            running.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.RunDispatcher.#ctor(System.Func{System.Boolean})">
            <summary>
            Creates a new RunMethodManager, taking in a conditional delegate to
            run for each step to see if more work remains.
            </summary>
            <param name="runNextStep">
            The conditional delegate that performs work and indicates whether
            additional work remains.
            </param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.RunDispatcher.Create(System.Func{System.Boolean})">
            <summary>
            Create a new run method manager object.
            </summary>
            <param name="runNextStep">
            Conditional indicating whether more work will remain after
            performing the work.
            </param>
            <returns>
            Returns the run method manager. Typically depends on the execution 
            platform and environment.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.RunDispatcher.Create(System.Func{System.Boolean},System.Windows.Threading.Dispatcher)">
            <summary>
            Create a new run method manager object.
            </summary>
            <param name="runNextStep">
            Conditional indicating whether more work will remain after
            performing the work.
            </param>
            <param name="dispatcher">A Dispatcher instance.</param>
            <returns>
            Returns the run method manager. Typically depends on the execution 
            platform and environment.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.RunDispatcher.Run">
            <summary>
            A completely synchronous implementation, unless overridden, that
            calls RunNextStep() until the harness is finished.
            
            The default implementation will not work with a presentation-rich
            test environment.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.RunDispatcher.RunNextStep">
            <summary>
            Calls a conditional delegate, and returns whether there is more work
            to be done.
            </summary>
            <returns>
            Returns a value indicating whether there is additional work
            remaining after executing the current work.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.RunDispatcher.OnComplete">
            <summary>
            Calls the Complete event handler.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.Harness.RunDispatcher.Complete">
            <summary>
            Event that is called when all work is complete.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.RunDispatcher.IsRunning">
            <summary>
            Gets or sets a value indicating whether the dispatcher should be 
            running.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.FastRunDispatcher._dispatcher">
            <summary>
            Stored Dispatcher instance.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.FastRunDispatcher.#ctor(System.Func{System.Boolean},System.Windows.Threading.Dispatcher)">
            <summary>
            Sets up a new run method manager.
            </summary>
            <param name="runNextStep">
            Conditional delegate which returns true as long as there is 
            additional work.
            </param>
            <param name="dispatcher">An instance of the dispatcher to use.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.FastRunDispatcher.Run">
            <summary>
            Begin the execution process by hooking up the underlying 
            DispatcherTimer to call into the test framework regularly and 
            perform test work items.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.GlobalExceptionHandler">
            <summary>
            Provides a property that will attach and detach a known event handler
            delegate when the bit is flipped.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.GlobalExceptionHandler._eventHandler">
            <summary>
            The event to fire when attached.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.GlobalExceptionHandler._attached">
            <summary>
            Whether the event handler is attached as a global unhandled
            exception handler.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.GlobalExceptionHandler.#ctor(System.EventHandler)">
            <summary>
            Creates a new exception handler "manager" with the provided
            EventHandler.
            </summary>
            <param name="eventHandler">The event handler to manage.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.GlobalExceptionHandler.ChangeExceptionBubbling(System.EventArgs,System.Boolean)">
            <summary>
            Mark the Handled property in the event args as True to stop any 
            event bubbling.
            </summary>
            <param name="e">Event arguments.</param>
            <param name="exceptionHandled">
            Value indicating whether the Exception should be marked as handled.
            </param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.GlobalExceptionHandler.GetExceptionObject(System.EventArgs)">
            <summary>
            Return the Exception property from the EventArgs.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            Returns the Exception object that the event arguments stores.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.GlobalExceptionHandler.OnGlobalException(System.Object,System.Windows.ApplicationUnhandledExceptionEventArgs)">
            <summary>
            Internal event that is hooked up to the global exception handler.
            </summary>
            <param name="sender">Source object of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.GlobalExceptionHandler.UpdateAttachment">
            <summary>
            Called after a change to the attachment field value.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.GlobalExceptionHandler.AttachHandler">
            <summary>
            Attach the handler globally.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.GlobalExceptionHandler.DetachHandler">
            <summary>
            Detach the handler globally.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.GlobalExceptionHandler.AttachGlobalHandler">
            <summary>
            Gets or sets a value indicating whether the handler is currently 
            attached to the global exception handler.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.HarnessExtensions">
            <summary>
            Set of extension methods used by the harness.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.HarnessExtensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            An AddRange implementation for the generic IList interface.
            </summary>
            <typeparam name="TListType">The list type.</typeparam>
            <param name="list">The list object.</param>
            <param name="collection">The collection to copy into the list.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.HarnessExtensions.Replace``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Replace a list's contents with the items in the IEnumerable.
            </summary>
            <typeparam name="TListType">The list type.</typeparam>
            <param name="list">The list object.</param>
            <param name="sequence">The sequence to copy into the list.</param>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.IProvideDynamicTestMethods">
            <summary>
            The IProvideDynamicTestMethods interface is used to provide additional
            test methods dynamically at runtime.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.IProvideDynamicTestMethods.GetDynamicTestMethods">
            <summary>
            Get the dynamic test methods.
            </summary>
            <returns>Sequence of dynamic test methods.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.ITestSettingsLogProvider">
            <summary>
            Interface for LogProviders that want access to external test settings.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ITestSettingsLogProvider.Initialize(Microsoft.Phone.Testing.UnitTestSettings)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.LazyAssemblyMethodInfo">
            <summary>
            A lazy method type.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.LazyMethodInfo">
            <summary>
            A class that does a lazy lookup when needed using reflection.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LazyMethodInfo._attributeType">
            <summary>
            Attribute Type instance.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LazyMethodInfo._searchType">
            <summary>
            The Type to search with.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LazyMethodInfo._hasSearched">
            <summary>
            Whether the search has happened.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LazyMethodInfo._methodInfo">
            <summary>
            The method reflection object.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LazyMethodInfo.#ctor(System.Type)">
            <summary>
            Construct a new lazy method wrapper.
            </summary>
            <param name="attributeType">The attribute type.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LazyMethodInfo.#ctor(System.Type,System.Type)">
            <summary>
            Construct a new lazy method wrapper.
            </summary>
            <param name="searchType">Type to search.</param>
            <param name="attributeType">Attribute type.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LazyMethodInfo.GetMethodInfo">
            <summary>
            Does a search and retrieves the method information.
            </summary>
            <returns>The method reflection object.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LazyMethodInfo.HasMethodInfo">
            <summary>
            Whether the type has a method info.
            </summary>
            <returns>A value indicating whether the method information has 
            been found.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LazyMethodInfo.Search">
            <summary>
            Perform a search on the type.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.LazyMethodInfo.AttributeType">
            <summary>
            Gets the type of attribute the lazy method is searching for.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.LazyMethodInfo.SearchType">
            <summary>
            Gets the underlying type that is searched.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.LazyMethodInfo.HasSearched">
            <summary>
            Gets or sets a value indicating whether a lookup has already been attempted.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.LazyMethodInfo.MethodInfo">
            <summary>
            Gets or sets the underlying MethodInfo from reflection.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LazyAssemblyMethodInfo._assembly">
            <summary>
            Underlying Assembly reflection object.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LazyAssemblyMethodInfo.#ctor(System.Reflection.Assembly,System.Type)">
            <summary>
            Create a new lazy method from a MethodInfo instance.
            </summary>
            <param name="assembly">Assembly reflection object.</param>
            <param name="attributeType">Attribute Type instance.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LazyAssemblyMethodInfo.Search">
            <summary>
            Performs a search on the MethodInfo for the attributes needed.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.LogDecorator">
            <summary>
            Well-known keys that can be used to mark decorator instances in log 
            message objects.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogDecorator.ExceptionObject">
            <summary>
            Key for a decorator that is a simple Exception object.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogDecorator.NameProperty">
            <summary>
            Key for a decorator that is a simple Name string property.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogDecorator.TestOutcome">
            <summary>
            An associated TestOutcome value.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogDecorator.TestStage">
            <summary>
            The stage of a message or event.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogDecorator.TestGranularity">
            <summary>
            The granularity of a message or event.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.LogMessage">
            <summary>
            A log message.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogMessage.DefaultLogMessageType">
            <summary>
            The default log message used during initialization.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessage.#ctor">
            <summary>
            Initializes a new log message of the default message type.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessage.#ctor(Microsoft.Phone.Testing.Harness.LogMessageType)">
            <summary>
            Initializes a new log message.
            </summary>
            <param name="messageType">The message type.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessage.ToString">
            <summary>
            Converts to string representation.
            </summary>
            <returns>A string version of the LogMessage.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessage.HasDecorator(System.Object)">
            <summary>
            Check if a decorator is present on the LogMessage.
            </summary>
            <param name="decorator">The decorator of interest.</param>
            <returns>
            Returns a value indicating whether the decorator is present in the
            DecoratorDictionary.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessage.HasDecorators(System.Object[])">
            <summary>
            Check if a set of decorators are present.
            </summary>
            <param name="decorators">The decorator(s) of interest.</param>
            <returns>
            Returns a value indicating whether the decorator(s) of interest are
            present.
            </returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.LogMessage.Decorators">
            <summary>
            Gets the set of decorator instances attached to the log message.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.LogMessage.MessageType">
            <summary>
            Gets or sets the type of message.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.LogMessage.Message">
            <summary>
            Gets or sets the log's message.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.LogMessage.Item(System.Object)">
            <summary>
            Gets or sets the decorator type for the message.
            </summary>
            <param name="decorator">
            The type of decorator.  Only one explicit Type is permitted,
            although multiple types within the same type hierarchy are
            legitimate.
            </param>
            <returns>Returns the instance of the decorator, if any.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.LogMessageFactory">
            <summary>
            A simple factory used for creating new log messages.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageFactory.Create">
            <summary>
            Create a new LogMessage instance.
            </summary>
            <returns>Returns a new LogMessage instance.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageFactory.Create(Microsoft.Phone.Testing.Harness.LogMessageType)">
            <summary>
            Create a new LogMessage instance.
            </summary>
            <param name="messageType">The type of message to create.</param>
            <returns>Returns a new LogMessage instance.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.LogMessageFactory.DefaultLogMessageType">
            <summary>
            Gets or sets the default log message type used for the creation of
            unspecific log message types.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.LogMessageType">
            <summary>
            Set of defined types of log messages to allow for some level of 
            filtering and selective processing of log messages.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogMessageType.TestResult">
            <summary>
            Pass, fail, etc.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogMessageType.Debug">
            <summary>
            Debug::WriteLine or tracing.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogMessageType.Warning">
            <summary>
            Non-fatal log message.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogMessageType.Error">
            <summary>
            Fatal error message.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogMessageType.KnownIssue">
            <summary>
            Information about a known defect.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogMessageType.Information">
            <summary>
            General information similar to a Console::WriteLine.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogMessageType.Environment">
            <summary>
            Operating system setting or platform values.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogMessageType.TestExecution">
            <summary>
            New unit of test or test run note.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogMessageType.TestInfrastructure">
            <summary>
            Related test systems or out-of-process communication information.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.LogMessageWriter">
            <summary>
            A utility type that writes new log messages to the test harness log
            queue.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogMessageWriter._factory">
            <summary>
            The factory used for creating new LogMessage types.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.LogMessageWriter._testHarness">
            <summary>
            The test harness that contains the method to post new events into
            the log message queue.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.#ctor(Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initialize a new writer class, using the default LogMessageFactory
            to create new messages.
            </summary>
            <param name="harness">The test harness instance.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.#ctor(Microsoft.Phone.Testing.Harness.UnitTestHarness,Microsoft.Phone.Testing.Harness.LogMessageFactory)">
            <summary>
            Initialize a new writer class.
            </summary>
            <param name="harness">The test harness instance.</param>
            <param name="messageFactory">
            The factory to use when creating new messages.
            </param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.Enqueue(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Posts a log message to the test harness queue for processing.
            </summary>
            <param name="message">The log message object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.Create">
            <summary>
            Creates a new log message using the embedded factory.
            </summary>
            <returns>Returns a new LogMessage instance.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.Create(Microsoft.Phone.Testing.Harness.LogMessageType)">
            <summary>
            Creates a new log message using the embedded factory.
            </summary>
            <param name="messageType">The message type.</param>
            <returns>Returns a new LogMessage instance.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.Create(Microsoft.Phone.Testing.Harness.LogMessageType,System.String)">
            <summary>
            Creates a new log message using the embedded factory.
            </summary>
            <param name="messageType">The message type.</param>
            <param name="message">The text message.</param>
            <returns>Returns a new LogMessage instance.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.Decorate(Microsoft.Phone.Testing.Harness.LogMessage,System.Object,System.Object)">
            <summary>
            Decorate a log message with a value.
            </summary>
            <param name="message">The log message to decorate.</param>
            <param name="key">The key for this decoration.</param>
            <param name="value">The value of this decoration.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.DecorateException(Microsoft.Phone.Testing.Harness.LogMessage,System.Exception)">
            <summary>
            Decorate the log message object with an Exception object.
            </summary>
            <param name="message">The log message object.</param>
            <param name="exception">The Exception.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.DecorateNameProperty(Microsoft.Phone.Testing.Harness.LogMessage,System.String)">
            <summary>
            Decorate the log message object with a name.
            </summary>
            <param name="message">The log message object.</param>
            <param name="name">Name property value.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.DecorateTestStage(Microsoft.Phone.Testing.Harness.LogMessage,Microsoft.Phone.Testing.Harness.TestStage)">
            <summary>
            Decorate the log message object with a test stage value.
            </summary>
            <param name="message">The log message object.</param>
            <param name="stage">Test stage value.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.DecorateTestOutcome(Microsoft.Phone.Testing.Harness.LogMessage,Microsoft.Phone.Testing.Harness.TestOutcome)">
            <summary>
            Decorate the log message object with a test outcome object.
            </summary>
            <param name="message">The log message object.</param>
            <param name="outcome">Test outcome object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.DecorateTestGranularity(Microsoft.Phone.Testing.Harness.LogMessage,Microsoft.Phone.Testing.Harness.TestGranularity)">
            <summary>
            Decorate the log message object with a test granularity object.
            </summary>
            <param name="message">The log message object.</param>
            <param name="granularity">Test granularity object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.SetType(Microsoft.Phone.Testing.Harness.LogMessage,Microsoft.Phone.Testing.Harness.LogMessageType)">
            <summary>
            Sets the type of the log message.
            </summary>
            <param name="message">The log message object.</param>
            <param name="type">The new value to set the message type to.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.DebugWriteLine(System.String)">
            <summary>
            This writes a new line of information similar to a Debug::WriteLine
            call.
            </summary>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.Information(System.String)">
            <summary>
            Writes information through a new log message.
            </summary>
            <param name="info">The information string.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.TestInfrastructure(System.String)">
            <summary>
            Writes a message relating to the test infrastructure.
            </summary>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.Environment(System.String)">
            <summary>
            Writes an environment message.
            </summary>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.TestExecution(System.String)">
            <summary>
            Writes a TestRun message.
            </summary>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.Error(System.String,System.Exception)">
            <summary>
            Log an error message.
            </summary>
            <param name="errorMessage">The error message string.</param>
            <param name="exception">The Exception object to decorate the message
            with.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.Error(System.String)">
            <summary>
            Log an error message.
            </summary>
            <param name="errorMessage">The error message string.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.Warning(System.String,System.Exception)">
            <summary>
            Log a warning message.
            </summary>
            <param name="warningMessage">The warning message string.</param>
            <param name="exception">The Exception object to decorate the message
            with.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.Warning(System.String)">
            <summary>
            Log a warning message.
            </summary>
            <param name="warningMessage">The warning message string.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.TestResult(System.String,Microsoft.Phone.Testing.Harness.TestOutcome)">
            <summary>
            Record a test outcome.
            </summary>
            <param name="message">The accompanying message.</param>
            <param name="outcome">The outcome value.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.KnownIssue(System.String)">
            <summary>
            Writes information about an encountered, known issue.
            </summary>
            <param name="issue">Information about the known issue.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.LogMessageWriter.GranularTestStage(System.String,System.String,Microsoft.Phone.Testing.Harness.TestGranularity,Microsoft.Phone.Testing.Harness.TestStage)">
            <summary>
            Records a log message that indicates a named, granular test stage 
            has happened.
            </summary>
            <param name="message">Any message for the log.</param>
            <param name="name">A name for the object or event.</param>
            <param name="granularity">The test granularity value.</param>
            <param name="stage">The test stage value.</param>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.MethodContainer">
            <summary>
            A method container.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.MethodContainer._timeout">
            <summary>
            The timeout time.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.MethodContainer._method">
            <summary>
            The test method metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.MethodContainer.#ctor">
            <summary>
            Constructs a new method container.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.MethodContainer.#ctor(System.Object,System.Reflection.MethodInfo,Microsoft.Phone.Testing.Metadata.ITestMethod)">
            <summary>
            Constructs a new method container.
            </summary>
            <param name="instance">An instance of the method's type.</param>
            <param name="method">The method reflection object.</param>
            <param name="testMethod">The test method.</param>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.MethodContainer._methodTask">
            <summary>
            The task that involves the method, and contains its own internal 
            test queue, if needed for asynchronous tasks.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.MethodContainer._methodInfo">
            <summary>
            The reflection object for the method.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.MethodContainer.Invoke">
            <summary>
            Invoke into the method.
            </summary>
            <returns>Returns the condition of any remaining work.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.MethodContainer.FirstInvoke">
            <summary>
            On the first invoke, make sure there's a task to call the method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.MethodContainer.MethodInfo">
            <summary>
            Gets the method's reflection object.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.MethodInvokeWorkItem">
            <summary>
            A simple work item that invokes a method through the reflection 
            MethodInfo instance.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.MethodInvokeWorkItem.None">
            <summary>
            An empty object array.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.MethodInvokeWorkItem._instance">
            <summary>
            An object instance.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.MethodInvokeWorkItem._method">
            <summary>
            Method reflection object.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.MethodInvokeWorkItem._testMethod">
            <summary>
            The test method to invoke.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.MethodInvokeWorkItem.#ctor(System.Object,System.Reflection.MethodInfo,Microsoft.Phone.Testing.Metadata.ITestMethod)">
            <summary>
            Creates a new method invoke work item for a MethodInfo instance.
            </summary>
            <param name="instance">The type instance.</param>
            <param name="method">The method on the type to invoke when the 
            work item is executed.</param>
            <param name="testMethod">The test method metadata.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.MethodInvokeWorkItem.Invoke">
            <summary>
            Invokes the underlying method on the instance and marks the 
            test work item as complete.
            </summary>
            <returns>False, noting the completion of the work item.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.ReflectionUtility">
            <summary>
            A set of helper methods for interacting with methods and types that are
            marked with attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ReflectionUtility.GetTypesWithAttribute(System.Reflection.Assembly,System.Type)">
            <summary>
            Retrieve all types in an assembly that are decorated with a specific
            attribute.
            </summary>
            <param name="assembly">Assembly to search.</param>
            <param name="decoratingAttribute">
            Instance of the Type of attribute that marks interesting methods.
            </param>
            <returns>
            A collection of types from the assembly.  An empty collection is
            returned if no types were found matching the constraints.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ReflectionUtility.GetAttributes(System.Reflection.MemberInfo,System.Type)">
            <summary>
            Given a MethodInfo type, returns the attributes (if any) that are of 
            the decoratingAttribute parameter's type.
            </summary>
            <param name="member">MemberInfo instance.</param>
            <param name="decoratingAttribute">Attribute of interest.</param>
            <returns>
            A collection populated with the Attribute instances.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ReflectionUtility.GetAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
            <summary>
            Given a MethodInfo type, returns the attributes (if any) that are of 
            the decoratingAttribute parameter's type.
            </summary>
            <param name="member">MemberInfo instance.</param>
            <param name="decoratingAttribute">Attribute of interest.</param>
            <param name="inherit">A value indicating whether to look for 
            inheriting custom attributes.</param>
            <returns>
            A collection populated with the Attribute instances.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ReflectionUtility.GetAttributes(Microsoft.Phone.Testing.Metadata.ITestMethod,System.Type,System.Boolean)">
            <summary>
            Given a test method, returns the attributes (if any) that are of 
            the decoratingAttribute parameter's type.
            </summary>
            <param name="method">ITestMethod instance.</param>
            <param name="decoratingAttribute">Attribute of interest.</param>
            <param name="inherit">Whether to inherit attributes.</param>
            <returns>
            A collection populated with the Attribute instances.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ReflectionUtility.GetAssembliesFromInstances(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Retrieve a list of Reflection.Assembly types from a set of 
            instances and/or types.
            </summary>
            <param name="objects">Set of instances or types.</param>
            <returns>A set of Assembly instances from the instances or types.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ReflectionUtility.GetAssemblies(System.Type[])">
            <summary>
            Returns a list of unique assemblies from a set of types.
            </summary>
            <param name="types">Set of types.</param>
            <returns>
            A list of unique Assembly instances from the input types.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ReflectionUtility.GetAttribute(System.Collections.Generic.ICollection{System.Attribute})">
            <summary>
            Given a list of attributes, retrieves a single Attribute instance.
            Will throw an exception if multiple attributes exist on the method.
            </summary>
            <param name="attributes">List of attributes.</param>
            <returns>
            The attribute instance, or null if it does not exist.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ReflectionUtility.GetAttribute(System.Reflection.MemberInfo,System.Type)">
            <summary>
            Given a method and a decorative attribute of interest, retrieves a
            single Attribute instance.  Will throw an exception if multiple
            attributes exist on the method.
            </summary>
            <param name="member">MemberInfo instance.</param>
            <param name="decoratingAttribute">
            Attribute type of interest.
            </param>
            <returns>
            The attribute instance, or null if it does not exist.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ReflectionUtility.GetAttribute(Microsoft.Phone.Testing.Metadata.ITestMethod,System.Type)">
            <summary>
            Given a test method and a decorative attribute of interest,
            retrieves a single Attribute instance.  Will throw an exception if
            multiple attributes exist on the method.
            </summary>
            <param name="method">ITestMethod instance.</param>
            <param name="decoratingAttribute">
            Attribute type of interest.
            </param>
            <returns>
            The attribute instance, or null if it does not exist.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ReflectionUtility.GetAttribute(Microsoft.Phone.Testing.Metadata.ITestMethod,System.Type,System.Boolean)">
            <summary>
            Given a test method and a decorative attribute of interest,
            retrieves a single Attribute instance.  Will throw an exception if
            multiple attributes exist on the method.
            </summary>
            <param name="method">ITestMethod instance.</param>
            <param name="decoratingAttribute">
            Attribute type of interest.
            </param>
            <param name="inherit">A value indicating whether to look for custom 
            inherited attributes.</param>
            <returns>
            The attribute instance, or null if it does not exist.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ReflectionUtility.HasAttribute(System.Reflection.MemberInfo,System.Type)">
            <summary>
            Returns a value indicating whether a method has the attribute.
            </summary>
            <param name="member">MemberInfo instance.</param>
            <param name="decoratingAttribute">Attribute of interest.</param>
            <returns>
            A value indicating whether the type has the decorating attribute or
            not.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ReflectionUtility.HasAttribute(Microsoft.Phone.Testing.Metadata.ITestMethod,System.Type)">
            <summary>
            Returns a value indicating whether a method has the attribute.
            </summary>
            <param name="method">ITestMethod instance.</param>
            <param name="decoratingAttribute">Attribute of interest.</param>
            <returns>
            A value indicating whether the type has the decorating attribute or
            not.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ReflectionUtility.GetMethodsWithAttribute(System.Type,System.Type)">
            <summary>
            Return a collection of MethodInfo instances given a type to look
            through  and the attribute of interest.
            </summary>
            <param name="type">Type to look through for methods.</param>
            <param name="decoratingAttribute">Attribute of interest.</param>
            <returns>
            A collection of the method reflection objects, if any, with the
            marked attribute present.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ReflectionUtility.GetOneMethodWithAttribute(System.Type,System.Type)">
            <summary>
            Retrieve a MethodInfo from a single decorated method inside a type,
            if any.  Throws an Exception if there are > 1 methods that are
            decorated with the attribute.
            </summary>
            <param name="type">Type of interest.</param>
            <param name="decoratingAttribute">Attribute of interest.</param>
            <returns>
            MethodInfo reflection object.  Null if none are found.
            </returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.ResourceUtility">
            <summary>
            Helper functionality for dealing with embedded resources in an assembly.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ResourceUtility.GetAllText(System.Object,System.String)">
            <summary>
            Get a string containing the text of an embedded resource in an
            assembly.
            </summary>
            <param name="instance">
            An instance whose assembly can be retrieved through reflection.
            </param>
            <param name="fullEmbeddedResourceName">
            Complete embedded resource name.
            </param>
            <returns>
            A string containing the embedded resource's string contents.
            </returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.RetryTestRunFilter">
            <summary>
            A type filter for just a specific test.  Allows the re-running of a 
            single result again in the same process.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestRunFilter">
            <summary>
            A type to filter down complete sets of classes, tests and methods.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestRunFilter.DefaultTestRunName">
            <summary>
            The default unit test run name.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestRunFilter._settings">
            <summary>
            Unit test settings.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestRunFilter.#ctor(Microsoft.Phone.Testing.UnitTestSettings,Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes a new test run filter using an existing settings file.
            </summary>
            <param name="settings">A unit test settings instance.</param>
            <param name="harness">The unit test harness.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestRunFilter.GetTestClasses(Microsoft.Phone.Testing.Metadata.IAssembly,Microsoft.Phone.Testing.Harness.TestClassInstanceDictionary)">
            <summary>
            Retrieve a set of test classes from a test assembly.
            </summary>
            <param name="assembly">The test assembly metadata object.</param>
            <param name="instances">Test class instance dictionary.</param>
            <returns>Returns a new list of test class metadata objects.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestRunFilter.SortTestClasses(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestClass})">
            <summary>
            Sort the test classes if the settings for alphabetical sorting are 
            present.
            </summary>
            <param name="tests">List of test classes.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestRunFilter.FilterTestClasses(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestClass},Microsoft.Phone.Testing.Harness.TestClassInstanceDictionary)">
            <summary>
            Filter out tests based on the standard-supported methods.
            </summary>
            <param name="classes">List of test classes.</param>
            <param name="instances">Test class instance dictionary.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestRunFilter.FilterCustomTestClasses(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestClass},Microsoft.Phone.Testing.Harness.TestClassInstanceDictionary)">
            <summary>
            Perform any custom filtering that the TestRunFilter needs.
            </summary>
            <param name="classes">List of test classes.</param>
            <param name="instances">Test class instance dictionary.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestRunFilter.FilterLegacyTestClasses(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestClass},Microsoft.Phone.Testing.Harness.TestClassInstanceDictionary)">
            <summary>
            If specific string-contains filters are present.
            </summary>
            <param name="classes">List of test classes.</param>
            <param name="instances">Test class instance dictionary.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestRunFilter.FilterExclusiveTestClasses(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestClass},Microsoft.Phone.Testing.Harness.TestClassInstanceDictionary)">
            <summary>
            If any exclusive classes are found, filter them.
            </summary>
            <param name="classes">List of test classes.</param>
            <param name="instances">Test class instance dictionary.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestRunFilter.GetTestMethods(Microsoft.Phone.Testing.Metadata.ITestClass,System.Object)">
            <summary>
            Retrieves the test methods from a test class metadata object.
            </summary>
            <param name="test">The test class metadata object.</param>
            <param name="instance">The test class instance.</param>
            <returns>Returns a list of test method metadata objects.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestRunFilter.FilterTestMethods(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestMethod})">
            <summary>
            Filter the test methods.
            </summary>
            <param name="methods">List of test methods.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestRunFilter.FilterCustomTestMethods(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestMethod})">
            <summary>
            Perform any custom filtering that the TestRunFilter needs.
            </summary>
            <param name="methods">List of test methods.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestRunFilter.FilterExclusiveTestMethods(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestMethod})">
            <summary>
            If any exclusive classes are found, filter them.
            </summary>
            <param name="methods">List of test methods.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestRunFilter.SortTestMethods(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestMethod})">
            <summary>
            Sorts the test methods, if requested.
            </summary>
            <param name="methods">List of test methods.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestRunFilter.TestRunName">
            <summary>
            Gets a friendly name for the test run.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestRunFilter.UnitTestHarness">
            <summary>
            Gets the unit test harness.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.RetryTestRunFilter._test">
            <summary>
            The test class.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.RetryTestRunFilter._method">
            <summary>
            The test method.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.RetryTestRunFilter.#ctor(Microsoft.Phone.Testing.Metadata.ITestClass,Microsoft.Phone.Testing.Metadata.ITestMethod)">
            <summary>
            Initializes a new test run filter using an existing settings file.
            </summary>
            <param name="test">The test class metadata.</param>
            <param name="method">The test method metadata.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.RetryTestRunFilter.GetTestClasses(Microsoft.Phone.Testing.Metadata.IAssembly,Microsoft.Phone.Testing.Harness.TestClassInstanceDictionary)">
            <summary>
            Retrieve a set of test classes from a test assembly.
            </summary>
            <param name="assembly">The test assembly metadata object.</param>
            <param name="instances">Test class instance dictionary.</param>
            <returns>Returns a new list of test class metadata objects.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.RetryTestRunFilter.GetTestMethods(Microsoft.Phone.Testing.Metadata.ITestClass,System.Object)">
            <summary>
            Retrieves the test methods from a test class metadata object.
            </summary>
            <param name="test">The test class metadata object.</param>
            <param name="instance">The test class instance.</param>
            <returns>Returns a list of test method metadata objects.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.ScenarioResult">
            <summary>
            A result from a test scenario.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ScenarioResult.#ctor(Microsoft.Phone.Testing.Metadata.ITestMethod,Microsoft.Phone.Testing.Metadata.ITestClass,Microsoft.Phone.Testing.Harness.TestOutcome,System.Exception)">
            <summary>
            Creates a result record.
            </summary>
            <param name="method">Test method metadata object.</param>
            <param name="testClass">Test class metadata object.</param>
            <param name="result">Test result object.</param>
            <param name="exception">Exception instance, if any.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.ScenarioResult.ToString">
            <summary>
            The string representation of the ScenarioResult.
            </summary>
            <returns>Returns a verbose string representation of the result.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.ScenarioResult.Started">
            <summary>
            Gets or sets the scenario's started time.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.ScenarioResult.Finished">
            <summary>
            Gets or sets the scenario's finishing time.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.ScenarioResult.TestMethod">
            <summary>
            Gets the test method metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.ScenarioResult.TestClass">
            <summary>
            Gets the test class metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.ScenarioResult.Result">
            <summary>
            Gets or sets the Result object.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.ScenarioResult.Exception">
            <summary>
            Gets the Exception instance, if any.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.SleepWorkItem">
            <summary>
            Test work item type that does not complete until the sleep time has 
            elapsed.  This is NOT a blocking Sleep.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.SleepWorkItem._delay">
            <summary>
            The amount of time to delay for.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.SleepWorkItem._expires">
            <summary>
            The DateTime that marks the point in time the task is complete.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.SleepWorkItem.#ctor(System.TimeSpan)">
            <summary>
            Create a new Sleep work item, including the number of 
            milliseconds to wait until continuing.
            </summary>
            <param name="delay">Amount of time to wait/delay.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.SleepWorkItem.Invoke">
            <summary>
            On the first time, will calculate the final DateTime.  Otherwise, 
            null operation (returns) until that time.
            </summary>
            <returns>Returns a value indicating whether there is more work to be
            done.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TagManager">
            <summary>
            A helper class that manages tags and associated metadata. Tag
            expressions are evaluated at the TestClass level.
            </summary>
            <summary>
            A helper class that manages tags and associated metadata. Tag
            expressions are evaluated at the TestClass level.
            </summary>
            <summary>
            A helper class that manages tags and associated metadata. Tag
            expressions are evaluated at the TestClass level.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagManager.PriorityTagPrefix">
            <summary>
            The prefix for any tags generated from priority values.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagManager.TagType">
            <summary>
            A reference to the tag attribute type.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagManager._classTags">
            <summary>
            The test tags associated with the class.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagManager._methodTags">
            <summary>
            The test tags associated with methods.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagManager._tagsToMethods">
            <summary>
            The ability to grab the set of methods, given a test class type, 
            and the tag of interest.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagManager._testClass">
            <summary>
            The test class type.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.#ctor(System.Type,System.Collections.Generic.IEnumerable{Microsoft.Phone.Testing.Metadata.ITestMethod})">
            <summary>
            Initializes a new tag manager.
            </summary>
            <param name="test">The test class type.</param>
            <param name="methods">The set of methods to run.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.CreateClassTags(System.Type)">
            <summary>
            Reflect, read and prepare the tags for the class metadata. Performs 
            the work if this is the first time the metadata has been seen.
            </summary>
            <param name="test">The reflection object for the test class.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.CreateMethodTags(Microsoft.Phone.Testing.Metadata.ITestMethod)">
            <summary>
            Reflect, read and prepare the tags for the method metadata. Performs 
            the work if this is the first time the metadata has been seen.
            </summary>
            <param name="method">The method metadata.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.EvaluateExpression(System.String)">
            <summary>
            Get the test methods that correspond to a tag expression.
            </summary>
            <param name="tagExpression">Tag expression.</param>
            <returns>Test methods for the tag expression.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TagManager.Universe">
            <summary>
            Gets or sets the universe of all test methods for expression 
            evaluation.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator">
            <summary>
            Evaluate tag expressions.
            </summary>
            <remarks>
            Tag expressions are derived from the following EBNF grammar:
                {Expression} :=
                    {Expression} + {Term} |
                    {Expression} - {Term} |
                    {Term}
                {Term} :=
                    {Term} * {Factor} |
                    {Factor}
                {Factor} :=
                    !{Factor} |
                    ({Expression}) |
                    {Tag}
                {Tag} :=
                    All |
                    [^InvalidCharacters]+
             
            The non-terminals for {Expression} and {Term} will be left factored
            in the recursive descent parser below.
            </remarks>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.Union">
            <summary>
            Union character.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.Intersection">
            <summary>
            Intersection character.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.Complement">
            <summary>
            Complement character.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.Difference">
            <summary>
            Difference character.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.All">
            <summary>
            The "All" string constant.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.InvalidCharacters">
            <summary>
            Invalid characters in a tag name.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.Evaluate(Microsoft.Phone.Testing.Harness.TagManager,System.String)">
            <summary>
            Evaluate a tag expression.
            </summary>
            <param name="owner">The owner object.</param>
            <param name="tagExpression">Tag expression.</param>
            <returns>Test methods associated with the tag expression.</returns>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator._owner">
            <summary>
            The owning TagManager instance.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator._tagExpression">
            <summary>
            Expression being evaluated.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator._position">
            <summary>
            Current position in the expression.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.#ctor(Microsoft.Phone.Testing.Harness.TagManager,System.String)">
            <summary>
            Create an expression evaluator.
            </summary>
            <param name="owner">The owner object.</param>
            <param name="tagExpression">Expression object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.Match(System.String)">
            <summary>
            Match a sequence of characters.
            </summary>
            <param name="expected">String to match.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.TryMatch(System.String)">
            <summary>
            Try to match a sequence of characters.
            </summary>
            <param name="expected">String to match.</param>
            <returns>Returns a value indicating whether the match was 
            successful.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.Evaluate">
            <summary>
            Evaluate an expression.
            </summary>
            <returns>Test methods described by the expression.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.ReadExpression">
            <summary>
            Evaluate an expression.
            </summary>
            <returns>Test methods described by the expression.</returns>
            <remarks>
            We need to factor out left recursion, so:
                {Expression} :=
                    {Expression} + {Term} |
                    {Expression} - {Term} |
                    {Term}
            becomes:
                {Expression} :=
                	{Term}{Expression'}
                
                {Expression'} :=
                	#empty#
                	+ {Term}{Expression'}
                	- {Term}{Expression'}
            </remarks>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.ReadExpression(System.Collections.Generic.IEnumerable{Microsoft.Phone.Testing.Metadata.ITestMethod})">
            <summary>
            Evaluate an expression.
            </summary>
            <param name="term">
            Left term already read as part of the expression.
            </param>
            <returns>Test methods described by the expression.</returns>
            <remarks>
            Non-terminal created for left-factoring:
                {Expression'} :=
                	#empty#
                	+ {Term}{Expression'}
                	- {Term}{Expression'}
            </remarks>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.ReadTerm">
            <summary>
            Evaluate a term.
            </summary>
            <returns>Test methods described by the expression.</returns>
            <remarks>
            We need to factor out left recursion, so:
                {Term} :=
                    {Factor} * {Term} |
                    {Factor}
            becomes:
                {Term} :=
                    {Factor}{Term'}
            
                {Term'} :=
                	#empty#
                	^ {Factor}{Term'}
            </remarks>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.ReadTerm(System.Collections.Generic.IEnumerable{Microsoft.Phone.Testing.Metadata.ITestMethod})">
            <summary>
            Evaluate a term.
            </summary>
            <param name="factor">
            Left term already read as part of the expression.
            </param>
            <returns>Test methods described by the expression.</returns>
            <remarks>
            Non-terminal created for left-factoring:
                {Term'} :=
                	#empty#
                	^ {Factor}{Term'}
            </remarks>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.ReadFactor">
            <summary>
            Evaluate a factor.
            </summary>
            <returns>Test methods described by the expression.</returns>
            <remarks>
            {Factor} :=
                !{Factor} |
                ({Expression}) |
                {Tag}
            </remarks>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.CreateEmptyList">
            <summary>
            Creates a new empty collection.
            </summary>
            <returns>Returns an empty collection.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.ExpressionEvaluator.ReadTag">
            <summary>
            Evaluate a tag.
            </summary>
            <returns>Test methods described by the expression.</returns>
            <remarks>
            {Tag} :=
                All |
                [^InvalidCharacters]+
            </remarks>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TagManager.Tags">
            <summary>
            A string list for storing tags. Provides an Add method that takes 
            an attribute object and, if a TagAttribute, will append its tag 
            value to the list.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.Tags.#ctor">
            <summary>
            Initializes a new Tags instance.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.Tags.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new Tags instance from an existing collection.
            </summary>
            <param name="collection">The collection to copy.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagManager.Tags.Add(System.Attribute)">
            <summary>
            Adds a TagAttribute's tag value.
            </summary>
            <param name="tag">The tag object.</param>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TagTestRunFilter">
            <summary>
            A method and class filter that uses expressions and the TagAttribute.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagTestRunFilter.NullTagRunName">
            <summary>
            The name to use for the test run when the tag expression is null.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagTestRunFilter.#ctor(Microsoft.Phone.Testing.UnitTestSettings,Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes a new test run filter with the tag expression setting.
            </summary>
            <param name="settings">Unit test settings.</param>
            <param name="harness">Unit test harness.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagTestRunFilter.#ctor(Microsoft.Phone.Testing.UnitTestSettings,Microsoft.Phone.Testing.Harness.UnitTestHarness,System.String)">
            <summary>
            Initializes a new test run filter with the tag expression.
            </summary>
            <param name="settings">Unit test settings.</param>
            <param name="harness">Unit test harness.</param>
            <param name="tagExpression">The tag expression to use.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagTestRunFilter.SetTagExpression(System.String)">
            <summary>
            Sets the tag expression property.
            </summary>
            <param name="tagExpression">The tag expression to use.</param>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TagTestRunFilter._hasLoggedWarning">
            <summary>
            A value indicating whether the warning has been logged yet.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagTestRunFilter.FilterCustomTestClasses(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestClass},Microsoft.Phone.Testing.Harness.TestClassInstanceDictionary)">
            <summary>
            Apply tag filtering.
            </summary>
            <param name="classes">List of test classes.</param>
            <param name="instances">Test class instance dictionary.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagTestRunFilter.FilterCustomTestMethods(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestMethod})">
            <summary>
            Apply tag filtering.
            </summary>
            <param name="methods">List of test methods.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagTestRunFilter.ApplyExpression(Microsoft.Phone.Testing.Harness.TagManager,System.Collections.Generic.ICollection{Microsoft.Phone.Testing.Metadata.ITestMethod})">
            <summary>
            Apply the tag filtering.
            </summary>
            <param name="tagManager">The tag manager instance.</param>
            <param name="methods">Set of methods.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagTestRunFilter.FilterExclusiveTestClasses(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestClass},Microsoft.Phone.Testing.Harness.TestClassInstanceDictionary)">
            <summary>
            Exclusive attributes are not supported when also using tagging.
            </summary>
            <param name="classes">List of test classes.</param>
            <param name="instances">Test class instance dictionary.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TagTestRunFilter.FilterExclusiveTestMethods(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestMethod})">
            <summary>
            Exclusive attributes are not supported when also using tagging.
            </summary>
            <param name="methods">List of test methods.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TagTestRunFilter.TagExpression">
            <summary>
            Gets the tag expression in use by the run filter.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestAssemblyCompletedEventArgs">
            <summary>
            Assembly complete event arguments.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.UnitTestHarnessEventArgs">
            <summary>
            Generic unit test harness event arguments base class that contains a
            reference to the harness.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarnessEventArgs.#ctor(Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes a new instance of the UnitTestHarnessEventArgs class.
            </summary>
            <param name="harness">The test harness.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarnessEventArgs.UnitTestHarness">
            <summary>
            Gets the unit test harness reference.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestAssemblyCompletedEventArgs.#ctor(Microsoft.Phone.Testing.Metadata.IAssembly,Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes a new instance of the TestAssemblyCompletedEventArgs
            type.
            </summary>
            <param name="assembly">The assembly metadata.</param>
            <param name="harness">The test harness instance.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestAssemblyCompletedEventArgs.Assembly">
            <summary>
            Gets the assembly metadata.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestAssemblyHelper">
            <summary>
            Helper code for TestAssembly logic.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestAssemblyHelper.HasExclusiveClasses(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestClass})">
            <summary>
            Check whether [Exclusive] attribute is present on any classes.
            </summary>
            <param name="classes">Collection of class metadata objects.</param>
            <returns>Returns a value indicating whether any of the classes 
            include an [Exclusive] attribute.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestAssemblyHelper.SortTestClasses(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestClass})">
            <summary>
            Sorts the test classes alphabetically by name.
            </summary>
            <param name="classes">A list of test class metadata objects.</param>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestAssemblyStartingEventArgs">
            <summary>
            Test assembly starting event arguments.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestAssemblyStartingEventArgs.#ctor(Microsoft.Phone.Testing.Metadata.IAssembly,Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes a new instance of the TestAssemblyStartingEventArgs
            type.
            </summary>
            <param name="assembly">The assembly metadata.</param>
            <param name="harness">The unit test harness instance.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestAssemblyStartingEventArgs.Assembly">
            <summary>
            Gets the assembly metadata information.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestClassCompletedEventArgs">
            <summary>
            The test class completed event arguments.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestClassCompletedEventArgs.#ctor(Microsoft.Phone.Testing.Metadata.ITestClass,Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes a new instance of the TestClassCompletedEventArgs
            class.
            </summary>
            <param name="testClass">Test class metadata.</param>
            <param name="harness">The harness instance.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestClassCompletedEventArgs.TestClass">
            <summary>
            Gets the test class metadata.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestClassHelper">
            <summary>
            Test class helper.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestClassHelper._hasWarned">
            <summary>
            A value indicating whether the warning has been logged in this run.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestClassHelper.FilterTestsToRun(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestClass},System.Collections.Generic.ICollection{System.String})">
            <summary>
            Filter the set of test classes by removing unused classes.
            </summary>
            <param name="classes">The input list of test class metadata objects.</param>
            <param name="classesToRun">The classes to run.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestClassHelper.FilterExclusiveClasses(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestClass},Microsoft.Phone.Testing.Harness.LogMessageWriter)">
            <summary>
            Look through the classes for the [Exclusive] attribute. If found, 
            remove any classes where the attribute is not present.
            </summary>
            <param name="classes">The input list of classes.</param>
            <param name="logWriter">The log writer object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestClassHelper.FilterByFilterClassParameter(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestClass})">
            <summary>
            Look for the /p:FilterClass parameter in the test harness settings. 
            Try to do a substring match on all filtered test classes.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="classes">List of test classes to be filtered.</param>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestClassInstanceDictionary">
            <summary>
            A dictionary that manages single instances of types for use across the 
            unit test system.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestClassInstanceDictionary.GetInstance(System.Type)">
            <summary>
            Returns the instance for a Type; if there is not an instance yet, 
            this will use Activator.CreateInstance to create it.
            </summary>
            <param name="type">The Type instance to retrieve.</param>
            <returns>Returns an instance of the Type.  Returns a new instance 
            if the Type has not yet been used.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestClassInstanceDictionary.ClearInstance(System.Type)">
            <summary>
            Remove any instance for the type.
            </summary>
            <param name="type">The Type of instance to remove.</param>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestClassManager">
            <summary>
            Test class manager.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestClassManager._filter">
            <summary>
            Test run filter object.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestClassManager._testClass">
            <summary>
            Reference to the class and its metadata.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestClassManager._testExecutionQueue">
            <summary>
            Queue of any tests to run.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestClassManager._instance">
            <summary>
            Class instance.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestClassManager.#ctor(Microsoft.Phone.Testing.Harness.TestRunFilter,Microsoft.Phone.Testing.Harness.UnitTestHarness,Microsoft.Phone.Testing.Metadata.ITestClass,System.Object,Microsoft.Phone.Testing.Metadata.IUnitTestProvider)">
            <summary>
            A container type that handles an entire test class throughout the 
            test run.
            </summary>
            <param name="filter">Test run filter object.</param>
            <param name="testHarness">The unit test harness.</param>
            <param name="testClass">The test class metadata interface.</param>
            <param name="instance">The object instance.</param>
            <param name="provider">The unit test provider.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestClassManager.FirstInvoke">
            <summary>
            Code run the first time this container is invoked.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestClassManager.PrepareInstance">
            <summary>
            Custom tests need to be prepared before use.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestClassManager.EnqueueTestClassInitialize">
            <summary>
            The test initialize method.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestClassManager.EnqueueTestClassCleanup">
            <summary>
            The test cleanup method.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestClassManager.PopulateTestMethods">
            <summary>
            Reflect through the class to find any test methods, and add them to 
            the list of queued methods.  Also, sorts the methods if appropriate 
            based on the settings file.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestClassManager.EnqueueMethodDispatcher(System.Reflection.MethodInfo)">
            <summary>
            Add a new method dispatcher to the test work item queue.  This is a 
            work item container which is able to manage its own internal test 
            work item queue.
            </summary>
            <param name="method">The method reflection object.</param>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestClassStartingEventArgs">
            <summary>
            Information about the start of a test class event.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestClassStartingEventArgs.#ctor(Microsoft.Phone.Testing.Metadata.ITestClass,Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes a new instance of the TestClassStartingEventArgs type.
            </summary>
            <param name="testClass">The test class metadata.</param>
            <param name="harness">The unit test harness reference.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestClassStartingEventArgs.TestClass">
            <summary>
            Gets the test class instance.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestGranularity">
            <summary>
            The hierarchy of test execution represented in more generic terms, this
            allows for more robust and useful actions by log providers.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestGranularity.Harness">
            <summary>
            Harness-level granularity.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestGranularity.TestGroup">
            <summary>
            Group of test-level granularity.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestGranularity.Test">
            <summary>
            Test-level granularity.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestGranularity.TestScenario">
            <summary>
            Scenario-level granularity.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestHarnessCompletedEventArgs">
            <summary>
            Event information marking the completion of a test run.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestHarnessCompletedEventArgs.#ctor(Microsoft.Phone.Testing.Harness.TestHarnessState)">
            <summary>
            Creates a new TestHarnessCompletedEventArgs.
            </summary>
            <param name="testHarnessState">The final test harness state.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestHarnessCompletedEventArgs.State">
            <summary>
            Gets the final test harness state.
            
            This contains the final pass versus fail result at a minimum.
            Specific harnesses may extend the type to contain additional
            information, logs, scenario counts, or anything else.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestHarnessState">
            <summary>
            Base class representing the overall state of a test run.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestHarnessState.IncrementFailures">
            <summary>
            Increment the failures counter.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestHarnessState.IncrementTotalScenarios">
            <summary>
            Increments the total scenarios counter.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestHarnessState.Failures">
            <summary>
            Gets the count of failing scenarios.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestHarnessState.TotalScenarios">
            <summary>
            Gets the total count of scenarios run.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestHarnessState.Failed">
            <summary>
            Gets a value indicating whether the status recorded indicates a
            failure.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestMethodCompletedEventArgs">
            <summary>
            Test method completed event arguments, contains the result.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestMethodCompletedEventArgs.#ctor(Microsoft.Phone.Testing.Harness.ScenarioResult)">
            <summary>
            Initializes a new instance of the TestMethodCompletedEventArgs
            type.
            </summary>
            <param name="result">The result instance.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestMethodCompletedEventArgs.#ctor(Microsoft.Phone.Testing.Harness.ScenarioResult,Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes a new instance of the TestMethodCompletedEventArgs
            type.
            </summary>
            <param name="result">The result instance.</param>
            <param name="harness">The unit test harness.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestMethodCompletedEventArgs.Result">
            <summary>
            Gets the test method result.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestMethodHelper">
            <summary>
            Helper code for TestMethod logic.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestMethodHelper._hasWarned">
            <summary>
            A value indicating whether the warning has been logged in this run.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestMethodHelper.HasExclusiveMethods(System.Collections.Generic.ICollection{Microsoft.Phone.Testing.Metadata.ITestMethod})">
            <summary>
            Check whether [Exclusive] is present on >= 1 of the methods.
            </summary>
            <param name="methods">The methods to search through.</param>
            <returns>True if at least one of the methods has Exclusive.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestMethodHelper.FilterExclusiveMethods(System.Collections.Generic.IList{Microsoft.Phone.Testing.Metadata.ITestMethod},Microsoft.Phone.Testing.Harness.LogMessageWriter)">
            <summary>
            Look through the methods for the [Exclusive] attribute. If found, 
            remove any methods where the attribute is not present.
            </summary>
            <param name="methods">The methods to filter.</param>
            <param name="logWriter">The log writer object.</param>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestMethodManager">
            <summary>
            Manager for planning, processing, and reporting the result of a single 
            test method for a unit test provider.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestMethodManager._testClass">
            <summary>
            Underlying test class object.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestMethodManager._testMethod">
            <summary>
            Underlying test method object.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestMethodManager._instance">
            <summary>
            Reference to an instance of the test class.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestMethodManager._result">
            <summary>
            Scenario result of the test method.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestMethodManager._started">
            <summary>
            The started time of execution.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestMethodManager._output">
            <summary>
            Stores a collection of written lines.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestMethodManager._bugAttributePresent">
            <summary>
            A value indicating whether the bug attribute was present on this 
            method.  If it is, the result will be inverted at completion.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestMethodManager._mainTestMethodContainer">
            <summary>
            Contains the main test contents.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestMethodManager.#ctor(Microsoft.Phone.Testing.Harness.UnitTestHarness,Microsoft.Phone.Testing.Metadata.ITestClass,Microsoft.Phone.Testing.Metadata.ITestMethod,System.Object,Microsoft.Phone.Testing.Metadata.IUnitTestProvider)">
            <summary>
            Constructor for a test method manager, which handles executing a single test method 
            for a unit test provider.
            </summary>
            <param name="testHarness">The unit test harness object.</param>
            <param name="testClass">The test class metadata object.</param>
            <param name="testMethod">The test method metadata object.</param>
            <param name="instance">The test class instance.</param>
            <param name="provider">The unit test provider.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestMethodManager.LogStartMessage">
            <summary>
            Log a start message.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestMethodManager.LogEndMessage">
            <summary>
            Log an end message.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestMethodManager.OnWriteLine(Microsoft.Phone.Testing.Metadata.StringEventArgs)">
            <summary>
            Handles the write line event for the test method.
            </summary>
            <param name="e">The string event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestMethodManager.FirstInvoke">
            <summary>
            First invoke, plan for the method's execution.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestMethodManager.SetResultTimes">
            <summary>
            Sets the start and finish times on the ScenarioResult object.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestMethodManager.CreateNewResult(Microsoft.Phone.Testing.Harness.TestOutcome)">
            <summary>
            Creates the ScenarioResult instance for this test method.
            </summary>
            <param name="outcome">The initial test outcome value.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestMethodManager.CompleteMethod(System.Object,System.EventArgs)">
            <summary>
            Process the result.
            </summary>
            <param name="sender">Source object.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestMethodManager.UnhandledMethodException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            Process an unhandled exception for the method.
            </summary>
            <param name="sender">Source object.</param>
            <param name="e">Unhandled exception event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestMethodManager.EnqueueMethodDispatcher(System.Reflection.MethodInfo)">
            <summary>
            Create a new method container to enclose a reflected method for execution.
            </summary>
            <param name="method">The method reflection object.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestMethodManager.BugAttributeProcessed">
            <summary>
            Gets or sets a value indicating whether the bug attribute's logic
            has already been processed.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestMethodManager.WriteLineOutput">
            <summary>
            Gets the write line output list.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestMethodStartingEventArgs">
            <summary>
            Test method starting event arguments.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestMethodStartingEventArgs.#ctor(Microsoft.Phone.Testing.Metadata.ITestMethod,Microsoft.Phone.Testing.Metadata.ITestClass,Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes a new instance of the TestMethodStartingEventArgs type.
            </summary>
            <param name="testMethod">The test method metadata.</param>
            <param name="testClass">The test class metadata.</param>
            <param name="harness">The test harness instance.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestMethodStartingEventArgs.TestMethod">
            <summary>
            Gets the test method metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestMethodStartingEventArgs.TestClass">
            <summary>
            Gets the test class metadata.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestOutcome">
            <summary>
            A number of possible test outcomes or results.  For compatibility, this 
            information resembles that of the desktop test framework, although many 
            of the states may not apply or be valid for a Windows Phone test harness.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestOutcome.Error">
            <summary>
            A test outcome of Error.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestOutcome.Failed">
            <summary>
            A test outcome of Failed.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestOutcome.Timeout">
            <summary>
            A test outcome of Timeout.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestOutcome.Aborted">
            <summary>
            A test outcome of Aborted.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestOutcome.Inconclusive">
            <summary>
            A test outcome of Inconclusive.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestOutcome.PassedButRunAborted">
            <summary>
            A test outcome of a run that was aborted, but passed.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestOutcome.NotRunnable">
            <summary>
            A test outcome of NotRunnable.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestOutcome.NotExecuted">
            <summary>
            A test outcome of NotExecuted.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestOutcome.Disconnected">
            <summary>
            A test outcome of Disconnected.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestOutcome.Warning">
            <summary>
            A test outcome of Warning.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestOutcome.Passed">
            <summary>
            A test outcome of Passed.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestOutcome.Completed">
            <summary>
            A test outcome of Completed.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestOutcome.InProgress">
            <summary>
            A test outcome of InProgress.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestOutcome.Pending">
            <summary>
            A test outcome of Pending.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestPanelManager">
            <summary>
            A manager for the underlying TestSurface Panel.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestPanelManager.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestPanelManager._testPage">
            <summary>
            The test page object.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestPanelManager._dirty">
            <summary>
            A value indicating whether the panel is dirty.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestPanelManager.ClearUsedChildren">
            <summary>
            Remove the children from the test surface, if it has 
            been used.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestPanelManager.ClearChildren">
            <summary>
            Remove the children from the test surface.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestPanelManager.TestPage">
            <summary>
            Gets or sets the Reference to the TestPage user control.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestPanelManager.TestPanel">
            <summary>
            Gets the TestSurface Panel, and tracks the use for the 
            current test method.  When the test completes, the panel children 
            will be cleared automatically.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestRunStartingEventArgs">
            <summary>
            Test method completed event arguments, contains the result.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestRunStartingEventArgs.#ctor(Microsoft.Phone.Testing.UnitTestSettings,Microsoft.Phone.Testing.Harness.TestRunFilter)">
            <summary>
            Initializes a new instance of the TestRunStartingEventArgs
            type.
            </summary>
            <param name="settings">The test run filter.</param>
            <param name="filter">The test run settings object.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestRunStartingEventArgs.Settings">
            <summary>
            Gets the unit test run settings.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestRunStartingEventArgs.TestRunFilter">
            <summary>
            Gets the test run filter.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestRunStartingEventArgs.TestHarnessName">
            <summary>
            Gets or sets the test harness name.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestRunStartingEventArgs.EnqueuedAssemblies">
            <summary>
            Gets or sets the number of valid, enqueued assemblies scheduled.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestServiceProvider">
            <summary>
            A system that provides test services.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Service.ProviderBase">
            <summary>
            The base class for test service providers.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.ProviderBase.#ctor(Microsoft.Phone.Testing.Harness.TestServiceProvider,System.String)">
            <summary>
            Initializes a new base provider class.
            </summary>
            <param name="provider">The owning test service provider.</param>
            <param name="displayName">The display name of the service.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.ProviderBase.Initialize">
            <summary>
            Initializes the provider.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.ProviderBase.IncrementBusyServiceCounter">
            <summary>
            Increments the busy service counter.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.ProviderBase.DecrementBusyServiceCounter">
            <summary>
            Decrements the busy service counter.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.ProviderBase.InvokeMethod(System.String,System.Object[])">
            <summary>
            Invokes a method on this provider using reflection.
            </summary>
            <param name="methodName">The name of the method.</param>
            <param name="parameters">The optional parameters.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.ProviderBase.OnInitializeCompleted">
            <summary>
            Call the InitializeCompleted event.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.ProviderBase.Callback(System.Action{Microsoft.Phone.Testing.Service.ServiceResult},Microsoft.Phone.Testing.Service.ServiceResult)">
            <summary>
            Performs a callback.  Null action and/or result are permitted.
            </summary>
            <param name="action">The optional callback action.</param>
            <param name="result">The result to pass back.</param>
        </member>
        <member name="E:Microsoft.Phone.Testing.Service.ProviderBase.InitializeCompleted">
            <summary>
            Event fired once initialization is complete.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Service.ProviderBase.DisplayName">
            <summary>
            Gets the display name for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Service.ProviderBase.TestService">
            <summary>
            Gets the owning test service.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Service.ProviderBase.Initialized">
            <summary>
            Gets a value indicating whether the provider has been initialized 
            yet.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestServiceProvider._services">
            <summary>
            The dictionary of services registered with this provider instance.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.#ctor">
            <summary>
            Initializes a new test service provider instance.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.Initialize">
            <summary>
            Initializes the provider and all of its test services.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.InitializeAllServices">
            <summary>
            Initialize all services and features synchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.RegisterService(Microsoft.Phone.Testing.Service.TestServiceFeature,Microsoft.Phone.Testing.Service.ProviderBase)">
            <summary>
            Register a new service that the test service should expose.
            </summary>
            <param name="feature">Known feature type.</param>
            <param name="serviceInstance">Instance of the feature's 
            <see cref="T:Microsoft.Phone.Testing.Service.ProviderBase"/> type.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.RegisterService(System.String,Microsoft.Phone.Testing.Service.ProviderBase)">
            <summary>
            Register a new service that the test service should expose.
            </summary>
            <param name="featureName">String name of the feature if the known 
            enum value does not exist.</param>
            <param name="serviceInstance">Instance of the feature's 
            <see cref="T:Microsoft.Phone.Testing.Service.ProviderBase"/> type.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.UnregisterService(Microsoft.Phone.Testing.Service.TestServiceFeature)">
            <summary>
            Unregisters a feature.
            </summary>
            <param name="feature">Known feature type.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.UnregisterService(System.String)">
            <summary>
            Unregisters a feature.
            </summary>
            <param name="featureName">Known feature type string.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.HasService(Microsoft.Phone.Testing.Service.TestServiceFeature)">
            <summary>
            Check if a requested feature is supported by the test service 
            provider.
            </summary>
            <param name="feature">Feature of interest.</param>
            <returns>A value indicating whether the feature exists.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.HasService(System.String)">
            <summary>
            Check if a requested feature is supported by the test service 
            provider.
            </summary>
            <param name="featureName">Feature of interest.</param>
            <returns>A value indicating whether the feature exists.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.GetService``1(Microsoft.Phone.Testing.Service.TestServiceFeature)">
            <summary>
            Retrieve a feature.  An exception will be thrown if the service 
            does not exist.
            </summary>
            <typeparam name="TService">Type of a service, ProviderBase.</typeparam>
            <param name="feature">The feature of interest.</param>
            <returns>Returns the feature, cast properly.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.GetService(Microsoft.Phone.Testing.Service.TestServiceFeature)">
            <summary>
            Retrieve a feature.
            </summary>
            <param name="feature">Feature of interest.</param>
            <returns>The feature's provider.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.GetService(System.String)">
            <summary>
            Retrieve a feature.
            </summary>
            <param name="featureName">Feature of interest.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.RequireService(Microsoft.Phone.Testing.Harness.TestServiceProvider,System.Type)">
            <summary>
            Require a feature, or throw an exception if it isn't available.
            </summary>
            <param name="feature">Feature of interest.</param>
            <param name="requiredType">The required type.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.RequireService(System.String,System.Type)">
            <summary>
            Require a feature, or throw an exception if it isn't available.
            </summary>
            <param name="featureName">Feature of interest.</param>
            <param name="requiredType">The required type.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.RequireService(Microsoft.Phone.Testing.Service.TestServiceFeature)">
            <summary>
            Require a feature or interest.
            </summary>
            <param name="feature">Feature of interest.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.RequireService(System.String)">
            <summary>
            Requires a service.
            </summary>
            <param name="featureName">Feature of interest.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.RequireServiceInternal(System.Object)">
            <summary>
            Check for and required the presence of a service.  Throws an 
            InvalidOperationException message if the service is unavailable.
            </summary>
            <param name="feature">Feature of interest.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.RequireServiceInternal(System.Object,System.Type)">
            <summary>
            Require a specific feature, and that it can be cast properly.
            </summary>
            <param name="feature">Feature of interest.</param>
            <param name="cast">The type to verify assignment for a cast.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TestServiceProvider.GetServiceInternal(System.Object)">
            <summary>
            Looks for a specific service.
            </summary>
            <param name="feature">Feature of interest.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestServiceProvider.UniqueTestRunIdentifier">
            <summary>
            Gets or sets a unique test run identifier, if any is present.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.TestServiceProvider.BusyServiceReferenceCounter">
            <summary>
            Gets or sets an integer value that can be used to manage simple
            reference counting services.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TestStage">
            <summary>
            The stage of a test scenario, case or system running.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestStage.Starting">
            <summary>
            In the process of starting.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestStage.Running">
            <summary>
            Currently running.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestStage.Finishing">
            <summary>
            Finishing up.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TestStage.Canceling">
            <summary>
            The test is canceling.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.TextFailuresLogProvider">
            <summary>
            A log provider that outputs failures as a string.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.TextFailuresLogProvider._failures">
            <summary>
            A list of failing results.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TextFailuresLogProvider.#ctor">
            <summary>
            Initializes a new TextFailuresLogProvider instance.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TextFailuresLogProvider.GetFailuresLog">
            <summary>
            Retrieve the text log of all failures in the unit test run.
            </summary>
            <returns>Returns the log contents.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TextFailuresLogProvider.RegisterLogHandlers">
            <summary>
            Register the handler conditions of interest to this log provider.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.TextFailuresLogProvider.ProcessResult(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Process a UTF result message.
            </summary>
            <param name="logMessage">The log message object.</param>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.UnitTestHarness">
            <summary>
            A test harness for interacting with unit test providers such as Visual 
            Studio Team Test's metadata.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestHarness.HarnessName">
            <summary>
            Display name for this harness.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestHarness._globalExceptions">
            <summary>
            Manages the attachment state of a global exception handler.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestHarness._harnessTasks">
            <summary>
            Container of all work items for the test harness.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestHarness._dispatcherStack">
            <summary>
            Manager of the stack of dispatchers, so that the appropriate parent 
            container handles exceptions and completion events.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestHarness._validTestAssemblies">
            <summary>
            Number of valid test assemblies encountered.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestHarness._knownTestMethods">
            <summary>
            The current run's known number of test methods.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestHarness._events">
            <summary>
            Backing field for the event firing helper.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.#ctor">
            <summary>
            Initiate unit test harness.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestHarness._queuedLogMessages">
            <summary>
            Queue of log messages awaiting processing.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.AddLogProvider(Microsoft.Phone.Testing.Harness.LogProvider)">
            <summary>
            Adds a log provider to the listening log providers group.
            </summary>
            <param name="provider">Log provider object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.QueueLogMessage(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Enqueue a log message object for processing by the log providers.
            </summary>
            <param name="message">The log message object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.Run">
            <summary>
            Begin running the test harness.
            </summary>
            <remarks>
            Make sure to subscribe to the Complete event before calling this 
            method, in some harnesses this may be a synchronous Run followed 
            immediately by the Complete event being fired.
            </remarks>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.RunDispatcherComplete(System.Object,System.EventArgs)">
            <summary>
            Complete event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.WriteLogFile(System.String,System.String)">
            <summary>
            Stores a log file for the test run. Depending on the execution 
            environment, this call may not successful.
            </summary>
            <param name="logName">The name of the log file.</param>
            <param name="fileContent">The log file content as a string.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.PublishFinalResult">
            <summary>
            If supported by any attached test service, this publishes the final
            test results. Typical harness implementations may immediately close
            the web browser channel upon receiving the message, so any other
            reporting should be done first.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.ProcessLogMessages">
            <summary>
            Process all queued log messages.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.InitializeSettings(Microsoft.Phone.Testing.UnitTestSettings)">
            <summary>
            Fill member variables with any non-null settings of the same type.
            </summary>
            <param name="settings">Settings container class.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.InitializeLogProviders">
            <summary>
            Initializes all log providers.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.OnTestHarnessCompleted">
            <summary>
            Call the TestHarnessCompleted event.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.OnPublishing(System.EventArgs)">
            <summary>
            Call the Publishing event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.PublishResults">
            <summary>
            Overrides the PublishResults method so that final reporting is only
            done once all other logging is finished.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.PublishFinalResults">
            <summary>
            Publish final results. If not yet ready, will keep waiting around
            as a work item until it is done.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestHarness._dispatcher">
            <summary>
            Stored dispatcher instance.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.IsReportingTestServiceConnected">
            <summary>
            Checks if a reporting provider is connected to the test service.
            </summary>
            <returns>Returns true if a reporting provider is connected to the
            test service.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.SetOverallStatus(System.String)">
            <summary>
            Immediately sets the overall status using a log message and
            processes the message queue.
            </summary>
            <param name="message">The message to set.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.PrepareCustomTestInstance(Microsoft.Phone.Testing.CustomFrameworkUnitTest)">
            <summary>
            Sets the unit test harness property for a test case that inherits 
            from the abstract base type 'CustomTest'.
            </summary>
            <param name="customTest">A CustomText instance.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.Initialize">
            <summary>
            Initialize the harness with a set of test assemblies.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.RestartRunDispatcher">
            <summary>
            Restarts the run dispatcher.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.TrackScenarioResult(Microsoft.Phone.Testing.Harness.ScenarioResult)">
            <summary>
            Track the results for our execution and also track the fail state.
            </summary>
            <param name="result">Scenario result to process.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.OnTestAssemblyStarting(Microsoft.Phone.Testing.Harness.TestAssemblyStartingEventArgs)">
            <summary>
            Fires the test assembly starting event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.OnIsDispatcherRunningChanged(System.EventArgs)">
            <summary>
            Fires the play pause event.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.OnTestAssemblyCompleted(Microsoft.Phone.Testing.Harness.TestAssemblyCompletedEventArgs)">
            <summary>
            Fires the test assembly completed event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.OnTestClassStarting(Microsoft.Phone.Testing.Harness.TestClassStartingEventArgs)">
            <summary>
            Fires the test class starting event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.OnTestClassCompleted(Microsoft.Phone.Testing.Harness.TestClassCompletedEventArgs)">
            <summary>
            Fires the test class completed event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.OnTestMethodStarting(Microsoft.Phone.Testing.Harness.TestMethodStartingEventArgs)">
            <summary>
            Fires the test method starting event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.OnTestMethodCompleted(Microsoft.Phone.Testing.Harness.TestMethodCompletedEventArgs)">
            <summary>
            Notifies observers that a test method has been completed. Also
            clears the test panel's visual tree.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.OnTestRunStarting(Microsoft.Phone.Testing.Harness.TestRunStartingEventArgs)">
            <summary>
            Notifies observers that a test run has been started.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestHarness._testPage">
            <summary>
            Reference to the test page object.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.EnqueueTestAssembly(System.Reflection.Assembly,Microsoft.Phone.Testing.Harness.TestRunFilter)">
            <summary>
            Enqueue a test assembly from a simple Assembly reference.
            </summary>
            <param name="assembly">The test assembly.</param>
            <param name="runFilter">The run filter settings for the test assembly's run.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.EnqueueTestAssembly(Microsoft.Phone.Testing.Metadata.IAssembly,Microsoft.Phone.Testing.Harness.TestRunFilter)">
            <summary>
            Enqueues a test assembly.
            </summary>
            <param name="testAssembly">The test assembly metadata.</param>
            <param name="runFilter">The run filter settings for the test assembly's run.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.RunNextStep">
            <summary>
            Flush the current log manager and then perform the next invoke.
            </summary>
            <returns>Returns true if work remains.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.CreateTestRunFilter(Microsoft.Phone.Testing.UnitTestSettings)">
            <summary>
            Creates the test run filter for the initial run.
            </summary>
            <param name="settings">The unit test settings.</param>
            <returns>Returns a new TestRunFilter instance.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.PrepareTestAssemblyTasks">
            <summary>
            Determine what test assemblies need to be executed. Enqueue tasks 
            for the unit test assembly providers to run the tests.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.CalculateTotalMethods(Microsoft.Phone.Testing.Harness.AssemblyManager,Microsoft.Phone.Testing.Metadata.IAssembly,Microsoft.Phone.Testing.Harness.TestRunFilter)">
            <summary>
            Calculates the number of methods for a run.
            </summary>
            <param name="assemblyManager">The assembly manager.</param>
            <param name="assembly">The test assembly.</param>
            <param name="filter">The test run filter.</param>
            <returns>Returns the number of known methods returned.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.HarnessComplete(System.Object,System.EventArgs)">
            <summary>
            Event fired at the completion of the harness' work.
            </summary>
            <param name="sender">Sender object instance.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.GlobalUnhandledExceptionListener(System.Object,System.EventArgs)">
            <summary>
            Listener event for any unhandled exceptions.
            </summary>
            <param name="sender">Sender object instance.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarness.CreateHarnessTasks">
            <summary>
            Creates the set of harness tasks to run and hooks up to the Complete event.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.Results">
            <summary>
            Gets the list of results.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.LogWriter">
            <summary>
            Gets the log message writer instance.  This can be used to easily 
            post informative messages to the log message queue and providers.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.LogicFactory">
            <summary>
            Gets or sets the logic factory used for instantiating the 
            unit test logic and management objects.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.State">
            <summary>
            Gets or sets the overall harness state - overloaded types can be 
            used to store additional information.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.LogProviders">
            <summary>
            Gets the log providers list.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.RunDispatcher">
            <summary>
            Gets or sets the wrapper that handles calling the next Run step 
            method until complete; allows for a virtual Run method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.Parameters">
            <summary>
            Gets the dictionary of Parameters passed into the test harness.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.Settings">
            <summary>
            Gets or sets the settings used to initialize the test harness.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.Events">
            <summary>
            Gets a set of events that can be fired for test results and other
            important test runtime events.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.Harness.UnitTestHarness.Publishing">
            <summary>
            The test harness is publishing results.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.TestService">
            <summary>
            Gets the TestService referenced by the test harness settings. The 
            test service provides advanced, optional functionality that is 
            useful to harness and test case developers. A typical test service 
            operates outside the process or security boundary.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.Harness.UnitTestHarness.TestHarnessCompleted">
            <summary>
            Complete event fired when the test harness has finished its test 
            run.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.Dispatcher">
            <summary>
            Gets a dispatcher instance.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.RootCompositeWorkItem">
            <summary>
            Gets the root container for test work to be completed.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.TestMethodCount">
            <summary>
            Gets the known number of test methods in the current test run.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.InterceptAllExceptions">
            <summary>
            Gets or sets a value indicating whether to intercept exceptions at 
            the app domain level and funnel into the current container or not.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.DispatcherStack">
            <summary>
            Gets the internal DispatcherStack being used by the test harness.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.Harness.UnitTestHarness.TestAssemblyStarting">
            <summary>
            The test assembly starting event.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.Harness.UnitTestHarness.IsDispatcherRunningChanged">
            <summary>
            On the play or pause change of the dispatcher.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.IsDispatcherRunning">
            <summary>
            Gets or sets a value indicating whether the dispatcher is currently
            running.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.Harness.UnitTestHarness.TestAssemblyCompleted">
            <summary>
            Test assembly completed event.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.Harness.UnitTestHarness.TestClassStarting">
            <summary>
            Test class starting event.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.Harness.UnitTestHarness.TestClassCompleted">
            <summary>
            The test class completed event.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.Harness.UnitTestHarness.TestMethodStarting">
            <summary>
            The test method starting event.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.Harness.UnitTestHarness.TestMethodCompleted">
            <summary>
            An event that is fired whenever a test method completes.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.Harness.UnitTestHarness.TestRunStarting">
            <summary>
            An event that is fired when the test run is starting.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.TestPage">
            <summary>
            Gets or sets the test page.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.UnitTestHarness.TestPanelManager">
            <summary>
            Gets the test panel manager instance.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.UnitTestHarnessEvents">
            <summary>
            A helper utility for firing events as the unit test harness from any
            component, internal or not. Enables expansion.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestHarnessEvents._harness">
            <summary>
            Stored instance of the harness.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarnessEvents.#ctor(Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes a new intance of the UnitTestHarnessEvents helper.
            </summary>
            <param name="harness">The harness reference.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarnessEvents.SendTestAssemblyStarting(Microsoft.Phone.Testing.Harness.TestAssemblyStartingEventArgs)">
            <summary>
            Calls the test assembly starting event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarnessEvents.SendTestAssemblyCompleted(Microsoft.Phone.Testing.Harness.TestAssemblyCompletedEventArgs)">
            <summary>
            Calls the test assembly completed event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarnessEvents.SendTestClassStarting(Microsoft.Phone.Testing.Harness.TestClassStartingEventArgs)">
            <summary>
            Calls the test class starting event handlers.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarnessEvents.SendTestClassCompleted(Microsoft.Phone.Testing.Harness.TestClassCompletedEventArgs)">
            <summary>
            Calls the test class completed event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarnessEvents.SendTestMethodStarting(Microsoft.Phone.Testing.Harness.TestMethodStartingEventArgs)">
            <summary>
            Calls the test method starting event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarnessEvents.SendTestMethodCompleted(Microsoft.Phone.Testing.Harness.TestMethodCompletedEventArgs)">
            <summary>
            Calls the test method completed event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestHarnessEvents.SendTestRunStarting(Microsoft.Phone.Testing.Harness.TestRunStartingEventArgs)">
            <summary>
            Calls the test run starting event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.UnitTestLogDecorator">
            <summary>
            Well-known keys that can be used to mark decorator instances in log 
            message objects.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestLogDecorator.IsUnitTestMessage">
            <summary>
            Indicates that the message is specific to the unit test system.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestLogDecorator.UnitTestHarness">
            <summary>
            The unit test harness reference.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestLogDecorator.TestAssemblyMetadata">
            <summary>
            The metadata interfacing object for a test assembly.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestLogDecorator.TestClassMetadata">
            <summary>
            The metadata interfacing object for a test class.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestLogDecorator.TestMethodMetadata">
            <summary>
            The metadata interfacing object for a test method.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestLogDecorator.IncorrectExceptionMessage">
            <summary>
            Indicates that the incorrect exception was intercepted.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestLogDecorator.IgnoreMessage">
            <summary>
            Indicates that the message indicates a skipped/ignored item.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestLogDecorator.ExpectedExceptionType">
            <summary>
            The type of the expected exception.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestLogDecorator.ActualExceptionType">
            <summary>
            The type of the actual exception.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestLogDecorator.ActualException">
            <summary>
            The actual exception.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestLogDecorator.TestRunFilter">
            <summary>
            A TestRunFilter object.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestLogDecorator.ScenarioResult">
            <summary>
            A ScenarioResult object.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.UnitTestLogicFactory">
            <summary>
            A factory for creating the unit test objects.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestLogicFactory._harness">
            <summary>
            The unit test harness.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogicFactory.#ctor(Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes a new unit test logic factory.
            </summary>
            <param name="harness">The unit test harness reference.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogicFactory.CreateAssemblyManager(Microsoft.Phone.Testing.Metadata.IUnitTestProvider,Microsoft.Phone.Testing.Harness.TestRunFilter,Microsoft.Phone.Testing.Metadata.IAssembly)">
            <summary>
            Creates a new AssemblyManager.
            </summary>
            <param name="provider">The unit test provider.</param>
            <param name="filter">The run filter.</param>
            <param name="assembly">The unit test assembly metadata object.</param>
            <returns>Returns a new AssemblyManager.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogicFactory.CreateTestClassManager(Microsoft.Phone.Testing.Metadata.IUnitTestProvider,Microsoft.Phone.Testing.Harness.TestRunFilter,Microsoft.Phone.Testing.Metadata.ITestClass,System.Object)">
            <summary>
            Creates a new TestClassManager.
            </summary>
            <param name="provider">The unit test provider.</param>
            <param name="filter">The run filter.</param>
            <param name="testClass">The test class metadata.</param>
            <param name="instance">The test class instance.</param>
            <returns>Returns a new TestClassManager.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogicFactory.CreateTestMethodManager(Microsoft.Phone.Testing.Metadata.IUnitTestProvider,Microsoft.Phone.Testing.Metadata.ITestClass,Microsoft.Phone.Testing.Metadata.ITestMethod,System.Object)">
            <summary>
            Creates a new TestMethodManager.
            </summary>
            <param name="provider">The unit test provider.</param>
            <param name="testClass">The test class metadata.</param>
            <param name="method">The test method metadata.</param>
            <param name="instance">The test class instance.</param>
            <returns>Returns a new TestMethodManager.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.UnitTestLogMessageWriter">
            <summary>
            The extended writer for the unit testing harness and consumers.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogMessageWriter.#ctor(Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Initializes the unit test log message writer helper.
            </summary>
            <param name="harness">The test harness reference.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogMessageWriter.MarkUnitTestMessage(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Marks a message as a unit test system-specific message.
            </summary>
            <param name="message">The log message object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogMessageWriter.IncorrectException(System.Type,System.Type,Microsoft.Phone.Testing.Metadata.ITestClass,Microsoft.Phone.Testing.Metadata.ITestMethod)">
            <summary>
            An incorrect exception type has occurred.
            </summary>
            <param name="expectedExceptionType">The expected type.</param>
            <param name="actualExceptionType">The actual exception's type.</param>
            <param name="test">The test metadata.</param>
            <param name="method">The method metadata.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogMessageWriter.NoExceptionWhenExpected(System.Type,Microsoft.Phone.Testing.Metadata.ITestClass,Microsoft.Phone.Testing.Metadata.ITestMethod)">
            <summary>
            No Exception was intercepted, yet one was expected.
            </summary>
            <param name="expectedExceptionType">The expected exception type.</param>
            <param name="test">The test class metadata.</param>
            <param name="method">The test method metadata.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogMessageWriter.LogException(System.Exception,Microsoft.Phone.Testing.Metadata.ITestClass,Microsoft.Phone.Testing.Metadata.ITestMethod)">
            <summary>
            Logs and Exception that was intercepted or observed.
            </summary>
            <param name="exception">The actual Exception instance.</param>
            <param name="test">The test class metadata.</param>
            <param name="method">The test method metadata.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogMessageWriter.Ignore(Microsoft.Phone.Testing.Harness.TestGranularity,System.String)">
            <summary>
            Enqueues a Ignore message.
            </summary>
            <param name="granularity">The granularity of the ignore operation.</param>
            <param name="name">The name of the test skipped.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogMessageWriter.TestRunFilterSelected(Microsoft.Phone.Testing.Harness.TestRunFilter)">
            <summary>
            Enqueues a message containing a test run filter.
            </summary>
            <param name="filter">The test run filter.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogMessageWriter.GranularAssemblyTestStage(Microsoft.Phone.Testing.Metadata.IAssembly,Microsoft.Phone.Testing.Harness.TestGranularity,Microsoft.Phone.Testing.Harness.TestStage)">
            <summary>
            Records a log message that indicates a named, granular test stage has 
            happened.
            </summary>
            <param name="assembly">The assembly metadata object.</param>
            <param name="granularity">The test granularity value.</param>
            <param name="stage">The test stage value.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogMessageWriter.TestClassStage(Microsoft.Phone.Testing.Metadata.ITestClass,Microsoft.Phone.Testing.Harness.TestStage)">
            <summary>
            Log a test class's stage.
            </summary>
            <param name="test">The test class metadata object.</param>
            <param name="stage">The test stage.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogMessageWriter.TestResult(Microsoft.Phone.Testing.Harness.ScenarioResult)">
            <summary>
            Log the result of a unit test scenario.
            </summary>
            <param name="result">The result of the test.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogMessageWriter.TestMethodStage(Microsoft.Phone.Testing.Metadata.ITestMethod,Microsoft.Phone.Testing.Harness.TestStage)">
            <summary>
            Log a test method's stage.
            </summary>
            <param name="method">The test method metadata object.</param>
            <param name="stage">The test stage.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestLogMessageWriter.UnitTestHarnessStage(Microsoft.Phone.Testing.Harness.UnitTestHarness,System.String,Microsoft.Phone.Testing.Harness.TestStage)">
            <summary>
            Records a harness state for the unit test harness.
            </summary>
            <param name="harness">The unit test harness.</param>
            <param name="name">The harness name.</param>
            <param name="stage">The test stage.</param>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.UnitTestMessageConditional">
            <summary>
            Helper conditional methods for unit test-specific log messages.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestMessageConditional.IsUnitTestEndMessage(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Determines whether a log message meets a specific condition or set 
            of conditions.
            </summary>
            <param name="message">The log message object.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestMessageConditional.IsUnitTestStartMessage(Microsoft.Phone.Testing.Harness.UnitTestLogDecorator)">
            <summary>
            Determines whether a log message meets a specific condition or set 
            of conditions.
            </summary>
            <param name="decorator">The unit test decorator of interest.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestMessageConditional.IsUnitTestMessage(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Returns a value indicating whether the message is marked as a unit
            test system message.
            </summary>
            <param name="message">The message.</param>
            <returns>Returns true if the message is a unit test system-marked 
            message.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestMessageConditional.HasUnitTestOutcome(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Determines whether a log message meets a specific condition or set 
            of conditions.
            </summary>
            <param name="message">The log message object.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestMessageConditional.IsIgnoreMessage(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Determines whether a log message meets a specific condition or set 
            of conditions.
            </summary>
            <param name="message">The log message object.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestMessageConditional.IsTestRunFilterMessage(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Determines whether a log message has an attached TestRunFilter.
            </summary>
            <param name="message">The log message object.</param>
            <returns>Returns a value indicating whether the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestMessageConditional.IsExceptionLogMessage(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Determines whether a log message meets a specific condition or set 
            of conditions.
            </summary>
            <param name="message">The log message object.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestMessageConditional.IsIncorrectExceptionLogMessage(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Determines whether a log message meets a specific condition or set 
            of conditions.
            </summary>
            <param name="message">The log message object.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestMessageConditional.IsKnownBug(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Determines whether a log message meets a specific condition or set 
            of conditions.
            </summary>
            <param name="message">The log message object.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.UnitTestMethodContainer">
            <summary>
            A container which is able to attach to the underlying test dispatcher 
            stack to enable advanced asynchronous functionality, when supported.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestMethodContainer._harness">
            <summary>
            The unit test harness.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestMethodContainer._granularity">
            <summary>
            The granularity of the contained item.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.UnitTestMethodContainer._testMethod">
            <summary>
            The test method metadata object.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestMethodContainer.#ctor(Microsoft.Phone.Testing.Harness.UnitTestHarness,System.Object,System.Reflection.MethodInfo,Microsoft.Phone.Testing.Metadata.ITestMethod,Microsoft.Phone.Testing.Harness.TestGranularity)">
            <summary>
            Initializes dispatcher-stack attaching method container work item.
            </summary>
            <param name="testHarness">Test harness.</param>
            <param name="instance">Test instance.</param>
            <param name="method">Method reflection object.</param>
            <param name="testMethod">Test method metadata.</param>
            <param name="granularity">Granularity of test.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestMethodContainer.FirstInvoke">
            <summary>
            Connect to dispatcher stack for advanced functions, if supported.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.UnitTestMethodContainer.SupportsWorkItemQueue">
            <summary>
            Check a MethodInfo for the advanced async attribute.
            </summary>
            <returns>True if the work item queue is supported.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider">
            <summary>
            A log provider that outputs in a simple custom test format that Visual 
            Studio recognizes.
            </summary>
            <summary>
            A log provider that outputs in a simple custom test format that Visual 
            Studio recognizes.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.DefaultTestResultsFilename">
            <summary>
            The filename to use for saving test results.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.DefaultTestAdapterTypeName">
            <summary>
            The default test adapter type name.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.DefaultTestListName">
            <summary>
            The default test list name.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.DefaultComputerName">
            <summary>
            The default computer name.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.DefaultUserName">
            <summary>
            The default user name.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.DefaultTestRunConfigurationName">
            <summary>
            The default configuration name.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.DefaultTestRunConfigurationDescription">
            <summary>
            The default configuration description.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider._writer">
            <summary>
            The Visual Studio log format writer.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.#ctor">
            <summary>
            Initializes a new instance of the VisualStudioLogProvider class.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.RegisterLogHandlers">
            <summary>
            Register the handler conditions of interest to this log provider.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.TestAssemblyStart(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Assembly start code.
            </summary>
            <param name="l">The log message.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.ProcessIncorrectException(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Process an Exception that was not the expected Exception type.
            </summary>
            <param name="l">The log message.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.ProcessException(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Process an Exception that is logged or stored.
            </summary>
            <param name="l">The log message object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.SetTestRunConfiguration(Microsoft.Phone.Testing.Metadata.IAssembly)">
            <summary>
            Sets the test run configuration information when the test assembly 
            begins processing.
            </summary>
            <param name="assembly">The test assembly metadata object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.GenerateTestRunName(Microsoft.Phone.Testing.Metadata.IAssembly)">
            <summary>
            Generate a name for the test run that will be used when 
            displaying the result in Visual Studio.
            </summary>
            <param name="assembly">The test assembly metadata object.</param>
            <returns>Returns the test run name.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.NewGuid">
            <summary>
            Generates a new Guid string value.
            </summary>
            <returns>Returns a new Guid string value.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.ProcessResult(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Process a UTF result message.
            </summary>
            <param name="logMessage">The log message object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.ProcessBug(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            Process [Bug(...)].
            </summary>
            <param name="l">A KnownBugLogMessage object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.TestRunFilterSelected(Microsoft.Phone.Testing.Harness.LogMessage)">
            <summary>
            The run filter has been selected.
            </summary>
            <param name="logMessage">The log message object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.WriteLogFile(Microsoft.Phone.Testing.Harness.UnitTestHarness)">
            <summary>
            Saves the log file data.
            </summary>
            <param name="harness">The unit test harness.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Initialize(Microsoft.Phone.Testing.UnitTestSettings)">
            <summary>
            Initializes the test harness.
            </summary>
            <param name="settings">The test harness settings.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.TestResultsFileName">
            <summary>
            Gets or sets the test results filename.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.TestAdapterTypeName">
            <summary>
            Gets or sets the test adapter type name reported in the Visual 
            Studio results log file.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.TestRunId">
            <summary>
            Gets or sets the TestRunId.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.TestListName">
            <summary>
            Gets or sets the test list name.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.ComputerName">
            <summary>
            Gets or sets the computer name that is reported in the results
            log file.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.UserName">
            <summary>
            Gets or sets the user name that is reported in the results file.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.TestRunConfigurationName">
            <summary>
            Gets or sets the TestRunConfigurationName.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.TestRunConfigurationDescription">
            <summary>
            Gets or sets the TestRunConfigurationDescription.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.TestRunNamePrefix">
            <summary>
            Gets or sets a prefix for use in the test run name.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.TestRunConfigurationId">
            <summary>
            Gets or sets the TestRunConfigurationId.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.CurrentAssemblyName">
            <summary>
            Gets the current assembly name.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer">
            <summary>
            A log provider that outputs in a simple custom test format that 
            Visual Studio recognizes. This is a simple, subset writer.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.DateTimeFormat">
            <summary>
            Date time format string representing round-trip date/time 
            pattern.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.DefaultTestTypeId">
            <summary>
            A unique ID representing the Visual Studio unit test type ID.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.ResultsXmlNamespace">
            <summary>
            The namespace for Visual Studio team test results.
            </summary>
            <remarks>Was of XNamespace type in XLinq implementation.</remarks>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer._testLists">
            <summary>
            A dictionary containing test list names and guids.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer._pendingElements">
            <summary>
            Stores temporary, pending elements for the next result.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.#ctor">
            <summary>
            Initializes a new Writer object.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.FinalizeContent">
            <summary>
            Stores property values in the respective elements, clears any 
            lookup dictionaries.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.ToDateString(System.DateTime)">
            <summary>
            Returns a string value of the DateTime object.
            </summary>
            <param name="dateTime">The DateTime object.</param>
            <returns>Returns the formatted string.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.GetXmlAsString">
            <summary>
            Returns the XML log file as a string.
            </summary>
            <returns>The XML value.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.CreateInitialDocument">
            <summary>
            Creates the initial results document and its XElements.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.CreateElement(System.String)">
            <summary>
            Creates a new XElement within the results XML namespace.
            </summary>
            <param name="name">The element name.</param>
            <returns>Returns a new named element.</returns>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer._total">
            <summary>
            The total number of scenarios.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer._outcomes">
            <summary>
            The set of outcomes and counts.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.IncrementResults(Microsoft.Phone.Testing.Harness.TestOutcome)">
            <summary>
            Increment the number of passing results.
            </summary>
            <param name="outcome">The test outcome.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.AddTestMethodResult(Microsoft.Phone.Testing.Metadata.ITestMethod,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,Microsoft.Phone.Testing.Harness.TestOutcome)">
            <summary>
            Adds the result of a test method into the log.
            </summary>
            <param name="test">The test metadata.</param>
            <param name="storage">The storage value.</param>
            <param name="codeBase">The code base value.</param>
            <param name="adapterTypeName">The adapter type name.</param>
            <param name="className">The class name.</param>
            <param name="testListName">The test list name.</param>
            <param name="computerName">The computer name.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="outcome">The outcome.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.AddPendingWriteLine(System.String)">
            <summary>
            Adds a WriteLine to the next result to be processed.
            </summary>
            <param name="line">The text to output.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.AddPendingErrorMessage(System.String)">
            <summary>
            Adds an error message to the next result to be processed.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.AddPendingException(System.Exception)">
            <summary>
            Adds an Exception to the next result to be processed.
            </summary>
            <param name="e">The Exception object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.AddPendingOutput(Microsoft.Phone.Testing.Service.SimpleXElement)">
            <summary>
            Adds pending output for the next result.
            </summary>
            <param name="element">The element to wrap in an Output element.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.GetTestListGuid(System.String)">
            <summary>
            Returns the GUID for a test list name. The result is stored 
            in memory.
            </summary>
            <param name="testListName">The test list name.</param>
            <returns>Returns the test list name guid.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.Started">
            <summary>
            Gets or sets the time that the test run started.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.Created">
            <summary>
            Gets or sets the time that the writer object and/or test run was created.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.Finished">
            <summary>
            Gets or sets the time that the test run was finished.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.TestRun">
            <summary>
            Gets the root XML node for the test run and its results.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.UnitTestTestTypeId">
            <summary>
            Gets or sets the test type ID used for new results.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.TestRunConfiguration">
            <summary>
            Gets the TestRunConfiguration element.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.Counters">
            <summary>
            Gets the Counters element.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.TestDefinitions">
            <summary>
            Gets the TestDefinitions element.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.TestLists">
            <summary>
            Gets the TestLists element.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.TestEntries">
            <summary>
            Gets the TestEntries element.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.Times">
            <summary>
            Gets the Times element.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.ResultSummary">
            <summary>
            Gets the ResultSummary element.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.Results">
            <summary>
            Gets the Results element.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.TestRunId">
            <summary>
            Sets the TestRunId.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.TestRunName">
            <summary>
            Sets the TestRunName.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.TestRunUser">
            <summary>
            Sets the TestRunUser.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.TestRunConfigurationName">
            <summary>
            Sets the TestRunConfigurationName.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.TestRunConfigurationId">
            <summary>
            Sets the TestRunConfigurationId.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.RunOutcome">
            <summary>
            Sets the overall run outcome value.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.VisualStudioLogProvider.Writer.TestRunConfigurationDescription">
            <summary>
            Sets the TestRunConfigurationDescription.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.WebBrowserTick">
            <summary>
            A type which handles preparing the underlying dispatcher or timer from 
            which the test work items execute.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.WebBrowserTick.DefaultTickInterval">
            <summary>
            Millisecond interval to use for the interval between DispatcherTimer
            ticks.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.WebBrowserTick._timer">
            <summary>
            Dispatcher timer.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.WebBrowserTick.#ctor(System.Func{System.Boolean})">
            <summary>
            Creates a new run method manager using the default value for the 
            timer's millisecond interval.
            </summary>
            <param name="runNextStep">
            Conditional delegate which returns true as long as there is 
            additional work.
            </param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.WebBrowserTick.#ctor(System.Func{System.Boolean},System.Int32)">
            <summary>
            Sets up a new run method manager.
            </summary>
            <param name="runNextStep">
            Conditional delegate which returns true as long as there is 
            additional work.
            </param>
            <param name="millisecondInterval">Milliseconds between ticks, at a 
            minimum.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.WebBrowserTick.Run">
            <summary>
            Begin the execution process by hooking up the underlying 
            DispatcherTimer to call into the test framework regularly and 
            perform test work items.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.WebBrowserTick.Timer_Tick(System.Object,System.EventArgs)">
            <summary>
            Call into the underlying work item queue, if the method manager is 
            still set to run.
            </summary>
            <param name="sender">Sending object.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:Microsoft.Phone.Testing.Harness.WorkItemsManager">
            <summary>
            A special type dedicated to keeping a running stack of the dispatch 
            managers that are actually enabled for "work item" use.  The current 
            dispatcher is used by the test work item queue.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Harness.WorkItemsManager._stack">
            <summary>
            Dispatcher stack; a stack of work item containers.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.WorkItemsManager.#ctor">
            <summary>
            Creates a new empty stack for work item containers.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.WorkItemsManager.Push(Microsoft.Phone.Testing.Harness.CompositeWorkItem)">
            <summary>
            Push a new dispatcher onto the stack.
            </summary>
            <param name="composite">The composite work item to push.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Harness.WorkItemsManager.Pop">
            <summary>
            Pop a dispatcher off the stack.
            </summary>
            <returns>Returns the top-most container.  Throws an 
            InvalidOperationException if none is available.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Harness.WorkItemsManager.CurrentCompositeWorkItem">
            <summary>
            Gets the current test work item dispatcher, which is the dispatcher 
            on the top of the stack.  Returns null if there is none.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.CustomFrameworkUnitTest">
            <summary>
            Base class for test cases that use special functionality of the 
            Microsoft.Phone.Testing unit test framework.
            
            Tests that derive from CustomTest in most cases will not be source- or 
            functionality- compatible with the more advanced desktop Visual Studio 
            Test Team environment and harnesses.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.CustomFrameworkUnitTest.HandleException(System.Exception)">
            <summary>
            Process an exception using the test engine logic for 
            ExpectedExceptions and logging the exception if needed.
            </summary>
            <param name="ex">Exception object.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.CustomFrameworkUnitTest.InterceptUnhandledExceptions">
            <summary>
            Gets or sets a value indicating whether global unhandled exceptions 
            should be intercepted by the test harness.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.CustomFrameworkUnitTest.UnitTestHarness">
            <summary>
            Gets or sets the unit test harness instance.  Hidden from the VS 
            browser as test developers should not need to use this property.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.CustomFrameworkUnitTest.WorkItemContainer">
            <summary>
            Gets the current test task container.
            </summary>
            <returns>The current container for the test's tasks.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.ExclusiveAttribute">
            <summary>
            A special indicator attribute to enable better debugging using 
            Microsoft.Phone.Testing.  
            
            As there is very little parameter information available for a test run, 
            this attribute singles out specific classes to execute when found.
            
            This attribute is unique to this environment and not compatible with any 
            desktop unit test framework without using a shim if it is left in code.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Extensions">
            <summary>
            Miscellaneous internal extension methods.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Extensions.TryGetAssemblyAttribute``1(System.Reflection.Assembly,``0@)">
            <summary>
            Attempts to retrieve a custom assembly attribute.
            </summary>
            <typeparam name="T">The type of attribute to retrieve.</typeparam>
            <param name="assembly">The assembly reference.</param>
            <param name="attribute">An out attribute reference.</param>
            <returns>Returns true if the attribute is found.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Extensions.ToTransformedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            Transform the XElement into a dictionary of key/value pairs.
            </summary>
            <typeparam name="T">The type of enumeration.</typeparam>
            <typeparam name="K">The key type.</typeparam>
            <typeparam name="R">The value type.</typeparam>
            <param name="that">The root enumerable.</param>
            <param name="keySelector">The key selector.</param>
            <param name="itemSelector">The item selector.</param>
            <returns>Returns a new dictionary.</returns>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.IAssembly">
            <summary>
            Test assembly metadata interface.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.IAssembly.GetTestClasses">
            <summary>
            Gets a collection of test class metadata objects.
            </summary>
            <returns>Returns a collection of metadata objects.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.IAssembly.AssemblyInitializeMethod">
            <summary>
            Gets the initialization method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.IAssembly.AssemblyCleanupMethod">
            <summary>
            Gets the cleanup method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.IAssembly.Provider">
            <summary>
            Gets a reference to the unit test provider.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.IAssembly.Name">
            <summary>
            Gets the name of the test assembly.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.IAssembly.TestHarness">
            <summary>
            Gets the test harness used to initialize the assembly.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.IExpectedException">
            <summary>
            An expected exception marker for a test method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.IExpectedException.ExceptionType">
            <summary>
            Gets the expected exception type.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.IExpectedException.Message">
            <summary>
            Gets any message associated with the expected exception object.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.IPriority">
            <summary>
            A representation of a test's priority.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.ITestClass">
            <summary>
            Metadata representing a test class.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.ITestClass.GetTestMethods">
            <summary>
            Retrieve a collection of the test method metadata objects setup by 
            the unit test provider.
            </summary>
            <returns>A collection of test method interfaces.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestClass.Type">
            <summary>
            Gets the test class Type instance.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestClass.Ignore">
            <summary>
            Gets a value indicating whether the test class should be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestClass.TestInitializeMethod">
            <summary>
            Gets the per-test initialization method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestClass.TestCleanupMethod">
            <summary>
            Gets the per-test cleanup method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestClass.ClassInitializeMethod">
            <summary>
            Gets the one-time class initialization method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestClass.ClassCleanupMethod">
            <summary>
            Gets the one-time class cleanup method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestClass.Name">
            <summary>
            Gets the name of the test class.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestClass.Namespace">
            <summary>
            Gets the namespace of the test class.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestClass.Assembly">
            <summary>
            Gets a reference to the parent test assembly metadata 
            instance.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.ITestMethod">
            <summary>
            Test method metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.ITestMethod.DecorateInstance(System.Object)">
            <summary>
            Used for decorating with unit test provider-specific capabilities, 
            such as the TestContext concept.
            </summary>
            <param name="instance">Instance to decorate.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.ITestMethod.GetDynamicAttributes">
            <summary>
            Get any attribute on the test method that are provided dynamically.
            </summary>
            <returns>
            Dynamically provided attributes on the test method.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.ITestMethod.Invoke(System.Object)">
            <summary>
            Invoke the test method.
            </summary>
            <param name="instance">Instance of the test class.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestMethod.Method">
            <summary>
            Gets the test method reflection object.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.Metadata.ITestMethod.WriteLine">
            <summary>
            Hooks up to any unit test provider-enabled WriteLine capability 
            for unit tests.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestMethod.Ignore">
            <summary>
            Gets a value indicating whether the test is marked to be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestMethod.Description">
            <summary>
            Gets any description for the method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestMethod.Name">
            <summary>
            Gets a name for the method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestMethod.Category">
            <summary>
            Gets any category information for the method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestMethod.Owner">
            <summary>
            Gets any test owner information.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestMethod.ExpectedException">
            <summary>
            Gets any expected exception attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestMethod.Timeout">
            <summary>
            Gets any timeout information.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestMethod.Properties">
            <summary>
            Gets a collection of any test properties.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestMethod.WorkItems">
            <summary>
            Gets a collection of any test work items.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestMethod.Priority">
            <summary>
            Gets any priority information.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.ITestProperty">
            <summary>
            A property for a test method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestProperty.Name">
            <summary>
            Gets the test property name.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.ITestProperty.Value">
            <summary>
            Gets the test property value.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.IUnitTestProvider">
            <summary>
            Provider model for a unit test system that uses reflection and metadata 
            to enable a unit test run.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.IUnitTestProvider.GetUnitTestAssembly(Microsoft.Phone.Testing.Harness.UnitTestHarness,System.Reflection.Assembly)">
            <summary>
            Retrieve the metadata instance for a test assembly given a 
            reflection Assembly instance.
            </summary>
            <param name="testHarness">The test harness using the provider.</param>
            <param name="assemblyReference">Reflected test assembly.</param>
            <returns>Unit test provider-specific metadata instance for 
            the test assembly.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.IUnitTestProvider.HasCapability(Microsoft.Phone.Testing.Metadata.UnitTestProviderCapabilities)">
            <summary>
            Gets a value indicating whether a specific capability or set of 
            capabilities are supported by the unit test provider.
            </summary>
            <param name="capability">Capability of interest.</param>
            <returns>Gets a value indicating whether the capability is 
            supported.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.IUnitTestProvider.IsFailedAssert(System.Exception)">
            <summary>
            Checks if an Exception actually represents an assertion that failed 
            to improve the logging experience.
            </summary>
            <param name="exception">Exception object.</param>
            <returns>Returns true if the Exception is an assertion exception 
            type.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.IUnitTestProvider.Name">
            <summary>
            Gets the name of the unit test provider.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.IUnitTestProvider.Capabilities">
            <summary>
            Gets the capabilities that the unit test provider implements.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.IWorkItemMetadata">
            <summary>
            Work item for a test.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.IWorkItemMetadata.Data">
            <summary>
            Gets the associated information from the work item.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.StringEventArgs">
            <summary>
            Event arguments that pass along a string value.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.StringEventArgs.#ctor">
            <summary>
            Create a new event argument instance.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.StringEventArgs.#ctor(System.String)">
            <summary>
            Create a new event argument instance that stores a string value.
            </summary>
            <param name="value">String value to pass along.</param>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.StringEventArgs._value">
            <summary>
            String value stored in the event arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.StringEventArgs.Value">
            <summary>
            Gets the stored string value.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.UnitTestProviderCapabilities">
            <summary>
            A set of capabilities that a unit test provider may chose to implement 
            through the metadata interfaces.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.UnitTestProviderCapabilities.None">
            <summary>
            No defined capabilities.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.UnitTestProviderCapabilities.AssemblySupportsInitializeMethod">
            <summary>
            Support for attribute [AssemblyInitialize].
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.UnitTestProviderCapabilities.AssemblySupportsCleanupMethod">
            <summary>
            Support for attribute [AssemblyCleanup].
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.UnitTestProviderCapabilities.ClassCanIgnore">
            <summary>
            Support for attribute [Ignore] for classes.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.UnitTestProviderCapabilities.MethodCanIgnore">
            <summary>
            Support for attribute [Ignore] for methods.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.UnitTestProviderCapabilities.MethodCanDescribe">
            <summary>
            Support for attribute [Description] on methods.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.UnitTestProviderCapabilities.MethodCanCategorize">
            <summary>
            Support for attribute [Category] on methods.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.UnitTestProviderCapabilities.MethodCanHaveOwner">
            <summary>
            Support for attribute [Owner] on method.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.UnitTestProviderCapabilities.MethodCanHavePriority">
            <summary>
            Support for attribute [Priority] on method.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.UnitTestProviderCapabilities.MethodCanHaveProperties">
            <summary>
            Support for attribute [TestProperty](...) on methods.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.UnitTestProviderCapabilities.MethodCanHaveTimeout">
            <summary>
            Support for attribute [Timeout] on methods.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.UnitTestProviderCapabilities.MethodCanHaveWorkItems">
            <summary>
            Support for attribute [WorkItem(...)]('s) on methods.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.UnitTestProviders">
            <summary>
            Unit test providers.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.UnitTestProviders._providers">
            <summary>
            List of unit test providers.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.UnitTestProviders.#cctor">
            <summary>
            Static constructor that initializes the built-in unit test metadata providers.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.UnitTestProviders.GetAssemblyProvider(Microsoft.Phone.Testing.Harness.UnitTestHarness,System.Reflection.Assembly)">
            <summary>
            Gets the unit test provider for an assembly.  The framework only 
            currently supports a single provider per test assembly, so if more 
            than one registered provider can handle the assembly, at runtime an 
            InvalidOperationException is thrown.
            </summary>
            <param name="harness">The test harness making the request.</param>
            <param name="testAssembly">Assembly reflection object.</param>
            <returns>The unit test provider for the test assembly.  Throws if 
            more than one can process the assembly.  Returns null if there is 
            not a provider for the assembly.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.UnitTestProviders.GetAssemblyWrapper(Microsoft.Phone.Testing.Harness.UnitTestHarness,System.Reflection.Assembly)">
            <summary>
            Returns the IAssembly provider for an assembly.
            </summary>
            <param name="harness">Test harness object.</param>
            <param name="testAssembly">Assembly reflection object.</param>
            <returns>Returns null or an IAssembly instance.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.UnitTestProviders.Providers">
            <summary>
            Gets the list of Unit Test providers.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.VisualStudio.ExpectedException">
            <summary>
            Expected exception metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.ExpectedException.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.ExpectedException.#ctor(Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute)">
            <summary>
            Creates a new expected exception metadata wrapper.
            </summary>
            <param name="expectedExceptionAttribute">Attribute value.</param>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.ExpectedException._exp">
            <summary>
            The expected exception attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ExpectedException.ExceptionType">
            <summary>
            Gets the type of the expected exception.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ExpectedException.Message">
            <summary>
            Gets any message to include in a failure.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.VisualStudio.Priority">
            <summary>
            A simple wrapper for a priority integer value that overrides the 
            ToString method.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.Priority.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the Priority class.
            </summary>
            <param name="priority">The priority.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.Priority.ToString">
            <summary>
            Gets the priority as string.
            </summary>
            <returns>Returns the priority.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.Priority.Value">
            <summary>
            Gets the priority value.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes">
            <summary>
            The set of provider attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.#cctor">
            <summary>
            Initializes the VSTT metadata provider.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.TestClass">
            <summary>
            Gets VSTT [TestClass] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.IgnoreAttribute">
            <summary>
            Gets VSTT [Ignore] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.ClassInitialize">
            <summary>
            Gets VSTT [ClassInitialize] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.Priority">
            <summary>
            Gets VSTT [Priority] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.ClassCleanup">
            <summary>
            Gets VSTT [ClassCleanup] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.TestInitialize">
            <summary>
            Gets VSTT [TestInitialize] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.TestCleanup">
            <summary>
            Gets VSTT [TestCleanup] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.DescriptionAttribute">
            <summary>
            Gets VSTT [Description] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.TimeoutAttribute">
            <summary>
            Gets VSTT [Timeout] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.OwnerAttribute">
            <summary>
            Gets VSTT [Owner] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.ExpectedExceptionAttribute">
            <summary>
            Gets VSTT [ExpectedException] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.AssemblyInitialize">
            <summary>
            Gets VSTT [AssemblyInitialize] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.AssemblyCleanup">
            <summary>
            Gets VSTT [AssemblyCleanup] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.TestMethod">
            <summary>
            Gets VSTT [TestMethod] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.ProviderAttributes.TestProperty">
            <summary>
            Gets VSTT [TestProperty] attribute.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass">
            <summary>
            Test class wrapper.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.#ctor(Microsoft.Phone.Testing.Metadata.IAssembly)">
            <summary>
            Construct a new test class metadata interface.
            </summary>
            <param name="assembly">Assembly metadata interface object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.#ctor(Microsoft.Phone.Testing.Metadata.IAssembly,System.Type)">
            <summary>
            Creates a new test class wrapper.
            </summary>
            <param name="assembly">Assembly metadata object.</param>
            <param name="testClassType">Type of the class.</param>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass._type">
            <summary>
            Test Type.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass._tests">
            <summary>
            Collection of test method interface objects.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass._testsLoaded">
            <summary>
            A value indicating whether tests are loaded.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass._m">
            <summary>
            A dictionary of method types and method interface objects.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.GetTestMethods">
            <summary>
            Gets a collection of test method  wrapper instances.
            </summary>
            <returns>A collection of test method interface objects.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.ToString">
            <summary>
            Exposes the name of the test class.
            </summary>
            <returns>Returns the name of the test class.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.Assembly">
            <summary>
            Gets the test assembly metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.Type">
            <summary>
            Gets the underlying Type of the test class.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.Name">
            <summary>
            Gets the name of the test class.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.Namespace">
            <summary>
            Gets the namespace of the test class.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.Ignore">
            <summary>
            Gets a value indicating whether an Ignore attribute present 
            on the class.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.TestInitializeMethod">
            <summary>
            Gets any test initialize method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.TestCleanupMethod">
            <summary>
            Gets any test cleanup method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.ClassInitializeMethod">
            <summary>
            Gets any class initialize method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.ClassCleanupMethod">
            <summary>
            Gets any class cleanup method.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.Methods">
            <summary>
            Methods enum.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.Methods.ClassInitialize">
            <summary>
            Initialize method.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.Methods.ClassCleanup">
            <summary>
            Cleanup method.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.Methods.TestInitialize">
            <summary>
            Test init method.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.TestClass.Methods.TestCleanup">
            <summary>
            Test cleanup method.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod">
            <summary>
            A provider wrapper for a test method.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.ContextPropertyName">
            <summary>
            Property name for the TestContext.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.DefaultPriority">
            <summary>
            Default value for methods when no priority attribute is defined.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.None">
            <summary>
            An empty object array.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod._methodInfo">
            <summary>
            Method reflection object.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.#ctor">
            <summary>
            Private constructor, the constructor requires the method reflection object.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.#ctor(System.Reflection.MethodInfo)">
            <summary>
            Creates a new test method wrapper object.
            </summary>
            <param name="methodInfo">The reflected method.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.OnWriteLine(System.String)">
            <summary>
            Call the WriteLine method.
            </summary>
            <param name="s">String to WriteLine.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.DecorateInstance(System.Object)">
            <summary>
            Decorates a test class instance with the unit test framework's 
            specific test context capability, if supported.
            </summary>
            <param name="instance">Instance to decorate.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.GetDynamicAttributes">
            <summary>
            Get any attribute on the test method that are provided dynamically.
            </summary>
            <returns>
            Dynamically provided attributes on the test method.
            </returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.Invoke(System.Object)">
            <summary>
            Invoke the test method.
            </summary>
            <param name="instance">Instance of the test class.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.ToString">
            <summary>
            Exposes the name of the test method as a string.
            </summary>
            <returns>Returns the name of the test method.</returns>
        </member>
        <member name="E:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.WriteLine">
            <summary>
            Allows the test to perform a string WriteLine.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.Method">
            <summary>
            Gets the underlying reflected method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.Ignore">
            <summary>
            Gets a value indicating whether there is an Ignore attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.Description">
            <summary>
            Gets any description marked on the test method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.Name">
            <summary>
            Gets the name of the method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.Category">
            <summary>
            Gets the Category.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.Owner">
            <summary>
            Gets the owner name of the test.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.ExpectedException">
            <summary>
            Gets any expected exception attribute information for the test method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.Timeout">
            <summary>
            Gets any timeout.  A Nullable property.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.Properties">
            <summary>
            Gets a Collection of test properties.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.WorkItems">
            <summary>
            Gets a collection of test work items.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod.Priority">
            <summary>
            Gets Priority information.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.VisualStudio.TestProperty">
            <summary>
            Represents a simple test property with a key/value string pair.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.TestProperty.#ctor">
            <summary>
            Initializes a new instance of the TestProperty class.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.TestProperty.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the TestProperty class.
            </summary>
            <param name="name">The initial property name.</param>
            <param name="value">The initial property value.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestProperty.Name">
            <summary>
            Gets or sets the property name.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.TestProperty.Value">
            <summary>
            Gets or sets the property value.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestContext">
            <summary>
            A wrapper for the unit test context capability of Visual Studio Team 
            Test's unit test framework.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestContext.#ctor(Microsoft.Phone.Testing.Metadata.VisualStudio.TestMethod)">
            <summary>
            Create a new unit test context wrapper for the test method.
            </summary>
            <param name="testMethod">Test method.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestContext.#ctor">
            <summary>
            Constructor of a new unit test context.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestContext._tm">
            <summary>
            Test method.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestContext.WriteLine(System.String,System.Object[])">
            <summary>
            Used to write trace messages while the test is running.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestContext.NotSupportedException(System.String)">
            <summary>
            Throw a not supported exception.
            </summary>
            <param name="functionality">Functionality that is not supported (string).</param>
            <returns>A new NotSupportedException.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestContext.AddResultFile(System.String)">
            <summary>
            Adds a file name to the list in TestResult.ResultFileNames.
            </summary>
            <param name="fileName">Filename to add as a result.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestContext.BeginTimer(System.String)">
            <summary>
            Begins a timer with the specified name.
            </summary>
            <param name="timerName">The name of the timer to create.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestContext.EndTimer(System.String)">
            <summary>
            Ends a timer with the specified name.
            </summary>
            <param name="timerName">Name of the timer.</param>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestContext._propertyCache">
            <summary>
            Cache of properties.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestContext.Properties">
            <summary>
            Gets test properties.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestContext.DataRow">
            <summary>
            Gets current data row when test is used for data driven testing.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestContext.DataConnection">
            <summary>
            Gets current data connection row when test is used for data driven testing.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestContext.TestName">
            <summary>
            Gets the name of the test method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestContext.CurrentTestOutcome">
            <summary>
            Gets the current enum outcome - passed, failed, or inconclusive.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestFrameworkAssembly">
            <summary>
            Assembly metadata for the Visual Studio Team Test unit test framework.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestFrameworkAssembly._assembly">
            <summary>
            Assembly reflection object.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestFrameworkAssembly._init">
            <summary>
            Assembly initialization method information.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestFrameworkAssembly._cleanup">
            <summary>
            Assembly cleanup method information.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestFrameworkAssembly._provider">
            <summary>
            Unit test provider used for the assembly.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestFrameworkAssembly._harness">
            <summary>
            The unit test harness.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestFrameworkAssembly.#ctor(Microsoft.Phone.Testing.Metadata.IUnitTestProvider,Microsoft.Phone.Testing.Harness.UnitTestHarness,System.Reflection.Assembly)">
            <summary>
            Creates a new unit test assembly wrapper.
            </summary>
            <param name="provider">Unit test metadata provider.</param>
            <param name="unitTestHarness">A reference to the unit test harness.</param>
            <param name="assembly">Assembly reflection object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestFrameworkAssembly.GetTestClasses">
            <summary>
            Reflect and retrieve the test class metadata wrappers for 
            the test assembly.
            </summary>
            <returns>Returns a collection of test class metadata 
            interface objects.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestFrameworkAssembly.Name">
            <summary>
            Gets the name of the test assembly.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestFrameworkAssembly.Provider">
            <summary>
            Gets the unit test provider instance.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestFrameworkAssembly.AssemblyInitializeMethod">
            <summary>
            Gets any assembly initialize method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestFrameworkAssembly.AssemblyCleanupMethod">
            <summary>
            Gets any assembly cleanup method.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestFrameworkAssembly.TestHarness">
            <summary>
            Gets the test harness used to initialize the assembly.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.UnitTestFrameworkAssembly.UnitTestHarness">
            <summary>
            Gets the test harness as a unit test harness.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Metadata.VisualStudio.VsttProvider">
            <summary>
            Provider for the Visual Studio Team Test unit test (UT) framework 
            metadata.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.VsttProvider.ProviderName">
            <summary>
            Name of this provider.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.VsttProvider.MyCapabilities">
            <summary>
            The capabilities of the VSTT UTF provider.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.VsttProvider.HasCapability(Microsoft.Phone.Testing.Metadata.UnitTestProviderCapabilities)">
            <summary>
            Whether the capability is supported by this provider.
            </summary>
            <param name="capability">Capability type.</param>
            <returns>A value indicating whether the capability is available.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.VsttProvider.#ctor">
            <summary>
            Create a new Visual Studio Team Test unit test framework provider 
            instance.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Metadata.VisualStudio.VsttProvider._assemblyCache">
            <summary>
            Cache of assemblies and assembly unit test interface objects.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.VsttProvider.GetUnitTestAssembly(Microsoft.Phone.Testing.Harness.UnitTestHarness,System.Reflection.Assembly)">
            <summary>
            VSTT unit test provider constructor; takes an assembly reference to 
            perform reflection on to retrieve all test class types. In this 
            implementation of an engine for the VSTT metadata, only a single 
            test Assembly can be utilized at a time for simplicity.
            </summary>
            <param name="testHarness">The unit test harness.</param>
            <param name="assemblyReference">Assembly reflection object.</param>
            <returns>Returns the assembly metadata interface.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Metadata.VisualStudio.VsttProvider.IsFailedAssert(System.Exception)">
            <summary>
            Check if the Exception is actually a failed assertion.
            </summary>
            <param name="exception">Exception object to check.</param>
            <returns>True if the exception is actually an assert failure.</returns>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.VsttProvider.Name">
            <summary>
            Gets the name of the provider.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Metadata.VisualStudio.VsttProvider.Capabilities">
            <summary>
            Gets the specialized capability descriptor.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.PresentationTest">
            <summary>
            Implementation of useful properties and features for presentation 
            platform tests.
            
            Tests using this functionality will not be compatible with the full 
            desktop framework's Visual Studio Team Test environment.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.WorkItemTest">
            <summary>
            Custom test class that provides the ability to perform semi-asynchronous 
            test tasks on the main thread.  Requires the custom unit test harness 
            that manages and invokes test work items on the thread when needed.
            
            Tests using this functionality will not be compatible with the full 
            desktop framework's Visual Studio Team Test environment.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItemTest.TestComplete">
            <summary>
            Signal that a test is complete when using Async testing.  
            
            WARNING: If you use your own methods for completing, such as an 
            HtmlTimer or other threading method, it is possible that this call 
            will occur *AFTER* the test has timed out when using Timeouts.  As 
            such, be very careful as you could complete the call to the *next* 
            test.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItemTest.EnqueueWorkItem(Microsoft.Phone.Testing.WorkItem)">
            <summary>
            Add a task object to the test queue.  For a test that is currently 
            executing, all tasks contained within the queue are executed to 
            completion (unless an Exception is thrown) -before- moving on to 
            the next test.
            
            The test task queue replaces the PumpMessages(...) system that 
            permitted a single callback.  This enables specialized tasks, such 
            as DOM bridge tasks, sleep tasks, and conditional continue tasks.
            </summary>
            <param name="testTaskObject">Asynchronous test task 
            instance.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItemTest.EnqueueDelay(System.TimeSpan)">
            <summary>
            Delay a minimum amount of time before continuing. Similar to a sleep
            call that is not a blocking call.
            </summary>
            <param name="delay">The minimum time span to wait before continuing.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItemTest.CreateDelay(System.TimeSpan)">
            <summary>
            Creates a delay work item instance.
            </summary>
            <param name="delay">The minimum time span to wait before continuing.</param>
            <returns>Returns a new work item.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItemTest.EnqueueDelay(System.Double)">
            <summary>
            Delay a minimum amount of time before continuing. Similar to a sleep
            call that is not a blocking call.
            </summary>
            <param name="milliseconds">The minimum number of milliseconds to wait
            until the delay is finished.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItemTest.EnqueueConditional(System.Func{System.Boolean})">
            <summary>
            Requires a bool returning delegate to be passed in. Instructs the 
            test task queue to wait until the conditional call returns True to 
            continue executing other test tasks and/or ending the test method.
            </summary>
            <param name="conditionalDelegate">Conditional method or delegate. 
            Test will halt until this condition returns True.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItemTest.CreateConditional(System.Func{System.Boolean})">
            <summary>
            Creates a conditional work item instance.
            </summary>
            <param name="conditionalDelegate">Conditional method or delegate. 
            Test will halt until this condition returns True.</param>
            <returns>Returns a new work item.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItemTest.EnqueueTestComplete">
            <summary>
            Enqueue a test task which calls the TestComplete method of 
            SilverlightTest.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItemTest.EnqueueCallback(System.Action)">
            <summary>
            Add a Callback method into the test task queue.  Similar to the 
            PumpMessages(...) call, with the difference being that there is no 
            longer a single requirement: you can enqueue several callback 
            methods and other test tasks, all of which will execute before the 
            test completes and/or the engine continues.
            </summary>
            <param name="testCallbackDelegate">Void-returning delegate, 
            anonymous delegates work fine too.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItemTest.CreateCallback(System.Action)">
            <summary>
            Creates a callback work item instance.
            </summary>
            <param name="testCallbackDelegate">Void-returning delegate, 
            anonymous delegates work fine too.</param>
            <returns>Returns a new work item.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItemTest.EnqueueCallback(System.Action[])">
            <summary>
            Adds a number of callback methods into the test task queue.
            </summary>
            <param name="actions">Set of Action instances.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.PresentationTest.TestPanel">
            <summary>
            Gets the test panel.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Properties.UnitTestMessage">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.AppTitle">
            <summary>
              Looks up a localized string similar to WINDOWS PHONE UNIT TEST FRAMEWORK.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.CompositeWorkItem_Invoke_NoRemainingWorkItems">
            <summary>
              Looks up a localized string similar to There are no remaining test work items.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.FailText">
            <summary>
              Looks up a localized string similar to fail.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.InvalidExpanderViewOperation">
            <summary>
              Looks up a localized string similar to Invalid operation. The IsExpanded property cannot be modified when IsNonExpandable is set to true..
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.LogException">
            <summary>
              Looks up a localized string similar to Exception: Type &quot;{0}&quot; Message &quot;{1}&quot;.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.LogIgnore">
            <summary>
              Looks up a localized string similar to Ignoring &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.LogIncorrectExceptionType">
            <summary>
              Looks up a localized string similar to Incorrect exception type &quot;{0}&quot; received. Was expecting a &quot;{1}&quot; type..
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.LogNoException">
            <summary>
              Looks up a localized string similar to No Exception was observed. Was expecting a &quot;{0}&quot; type exception..
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.Off">
            <summary>
              Looks up a localized string similar to Off.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.On">
            <summary>
              Looks up a localized string similar to On.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.PassText">
            <summary>
              Looks up a localized string similar to pass.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.RunningTestsText">
            <summary>
              Looks up a localized string similar to Running Tests....
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.TagAttribute_ctor_EmptyTag">
            <summary>
              Looks up a localized string similar to Tag cannot be empty!.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.TagAttribute_ctor_ReservedCharacter">
            <summary>
              Looks up a localized string similar to The tag &quot;{0}&quot; contains the invalid character &quot;{1}&quot;!.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.TagAttribute_ctor_ReservedTag">
            <summary>
              Looks up a localized string similar to Tag &quot;{0}&quot; is reserved!.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.TagEditorTitle">
            <summary>
              Looks up a localized string similar to test filter.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.TagManager_ExpressionEvaluator_EmptyTagExpression">
            <summary>
              Looks up a localized string similar to tagExpression cannot be empty!.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.TagManager_ExpressionEvaluator_ExpectedEndOfTagExpression">
            <summary>
              Looks up a localized string similar to Expected end of tag expression &quot;{0}&quot; at position {1}!.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.TagManager_ExpressionEvaluator_ExpectedTag">
            <summary>
              Looks up a localized string similar to Tag expected in expression &quot;{0}&quot; at position {1}!.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.TagManager_ExpressionEvaluator_InvalidTagExpression">
            <summary>
              Looks up a localized string similar to Invalid tag expression &quot;{0}&quot; (expected &quot;{1}&quot; at position {2})!.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.TagTestRunFilter_TaggingInUse">
            <summary>
              Looks up a localized string similar to Tag expression &quot;{0}&quot; is in use..
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.TestClassHelper_ExclusiveClassesInUse">
            <summary>
              Looks up a localized string similar to Exclusive classes are in use.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.TestMethodHelper_ExclusiveMethodsInUse">
            <summary>
              Looks up a localized string similar to Exclusive methods are in use.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.TestMethodManager_CompleteMethod_UnVerifiedBug">
            <summary>
              Looks up a localized string similar to The known issue could not be verified. A failure will be recorded. If this bug has been fixed, please mark the Fixed attribute value to True..
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.TotalText">
            <summary>
              Looks up a localized string similar to total.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.UnexpectedType">
            <summary>
              Looks up a localized string similar to The type was unexpected..
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.UnitTestCompositeWorkItem_ctor_NoTestHarness">
            <summary>
              Looks up a localized string similar to No TestHarness is available..
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.UnitTestContext_FeatureNotSupported">
            <summary>
              Looks up a localized string similar to The &quot;{0}&quot; functionality is not supported within this unit test system..
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.UnitTestHarness_Initialize_UnitTestHarnessInitialize">
            <summary>
              Looks up a localized string similar to Initialization of UnitTestHarness.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.UnitTestHarness_RunNextStep_NoCompositeWorkItemsExist">
            <summary>
              Looks up a localized string similar to No composite work items exist to be cleared..
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.UnitTestHarness_TestAssembliesNotActionable">
            <summary>
              Looks up a localized string similar to No test classes were selected to be in the test run..
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.UnitTestSystem_Run_NoTestHarnessInSettings">
            <summary>
              Looks up a localized string similar to Test harness was not specified on test harness settings object. If a test harness settings object was passed in, please verify that it contains a reference to a test harness..
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Properties.UnitTestMessage.WorkItemTest_EnqueueWorkItem_AsynchronousFeatureUnavailable">
            <summary>
              Looks up a localized string similar to Test bug: A test cannot use Test Task objects, such as callbacks and conditionals, or the PumpMessages feature, unless marked with the [Asynchronous] attribute..
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Service.EnvironmentProvider">
            <summary>
            A provider of environment variables and environmental information that 
            uses the test service provider infrastructure.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.EnvironmentProvider.#ctor(Microsoft.Phone.Testing.Harness.TestServiceProvider)">
            <summary>
            Initializes a new environment provider.
            </summary>
            <param name="testService">The test service.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.EnvironmentProvider.GetEnvironmentVariable(System.String,System.Action{Microsoft.Phone.Testing.Service.ServiceResult})">
            <summary>
            Retrieve an environment variable from the system.
            </summary>
            <param name="name">The variable name.</param>
            <param name="callback">The callback action.</param>
        </member>
        <member name="T:Microsoft.Phone.Testing.Service.IsolatedStorageSettingsProvider">
            <summary>
            A type that stores global settings in the isolated storage for the 
            application. An implementation of the <see cref="T:Microsoft.Phone.Testing.Service.SettingsProvider"/> 
            type.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Service.SettingsProvider">
            <summary>
            A provider of string dictionary values.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SettingsProvider.#ctor(Microsoft.Phone.Testing.Harness.TestServiceProvider)">
            <summary>
            Initializes a new SettingsProvider object.
            </summary>
            <param name="testService">The test service.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SettingsProvider.#ctor(Microsoft.Phone.Testing.Harness.TestServiceProvider,System.String)">
            <summary>
            Initializes a new SettingsProvider object.
            </summary>
            <param name="testService">The test service.</param>
            <param name="serviceName">The service name.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SettingsProvider.SaveSettings(System.Action{Microsoft.Phone.Testing.Service.ServiceResult})">
            <summary>
            Saves the settings.
            </summary>
            <remarks>Classes that inherit from SettingsProvider: hide this 
            function.  Do not call up through to this base method.</remarks>
            <param name="callback">The service callback.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Service.SettingsProvider.Settings">
            <summary>
            Gets the settings dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Service.SettingsProvider.IsReadOnly">
            <summary>
            Gets a value indicating whether the settings are read-only.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Service.SettingsProvider.SourceName">
            <summary>
            Gets the settings source for end-user display.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Service.IsolatedStorageSettingsProvider.TestFrameworkSettingsKeyName">
            <summary>
            The unique key used for storing the test framework's settings 
            dictionary.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Service.IsolatedStorageSettingsProvider._settings">
            <summary>
            The underlying settings object.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.IsolatedStorageSettingsProvider.#ctor(Microsoft.Phone.Testing.Harness.TestServiceProvider)">
            <summary>
            Initializes a new isolated storage settings provider.
            </summary>
            <param name="testService">The test service instance.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.IsolatedStorageSettingsProvider.Initialize">
            <summary>
            Initializes the isolated storage settings provider.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.IsolatedStorageSettingsProvider.SaveSettings(System.Action{Microsoft.Phone.Testing.Service.ServiceResult})">
            <summary>
            Saves the current settings values.
            </summary>
            <param name="callback">The service completion callback.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.IsolatedStorageSettingsProvider.LoadSettings">
            <summary>
            Recalls the stored settings values from isolated storage.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.IsolatedStorageSettingsProvider.InitializeSettings">
            <summary>
            Initialize the isolated storage application settings object.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Service.ServiceResult">
            <summary>
            Result object for asynchronous test service response.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.ServiceResult.CreateExceptionalResult(System.Exception)">
            <summary>
            Creates a new ServiceResult object for a failed result, the 
            sets the exception.
            </summary>
            <param name="except">The Exception object.</param>
            <returns>Returns a new ServiceResult with the Exception set.</returns>
        </member>
        <member name="F:Microsoft.Phone.Testing.Service.ServiceResult._result">
            <summary>
            The result LINQ element.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.ServiceResult.#ctor">
            <summary>
            Initializes a new instance of the ServiceResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.ServiceResult.ProcessResponse">
            <summary>
            Process the response text.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.ServiceResult.TryGetElement">
            <summary>
            Attempt to process and return the root element of a successful 
            request. Returns null if there was an Exception.
            </summary>
            <returns>The root XML element of the response.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.ServiceResult.SetResult(Microsoft.Phone.Testing.Service.SimpleXElement)">
            <summary>
            Sets the result.
            </summary>
            <param name="result">The LINQ element for the result.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Service.ServiceResult.Processed">
            <summary>
            Gets or sets a value indicating whether the result has been 
            processed.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Service.ServiceResult.Exception">
            <summary>
            Gets or sets the exception intercepted or generated during the 
            request or 
            processing timeframe.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Service.ServiceResult.Element">
            <summary>
            Gets the root XElement of the test service result.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Service.ServiceResult.Successful">
            <summary>
            Gets a value indicating whether the request was successful.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Service.ServiceType">
            <summary>
            The type of test service in use.  Used by the more advanced service 
            scenarios in SilverlightTestServiceProvider.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Service.ServiceType.None">
            <summary>
            No service, or unknown service type.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Service.ServiceType.Direct">
            <summary>
            A direct connection, be it the file system, isolated storage, or 
            similar.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Service.ServiceType.WebService">
            <summary>
            A web service.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Service.SimpleXElement">
            <summary>
            A simple implementation similar to XElement.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Service.SimpleXElement._children">
            <summary>
            Backing field for child elements.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Service.SimpleXElement._attributes">
            <summary>
            Backing field for attributes.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Service.SimpleXElement._name">
            <summary>
            Backing field for the element name.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Service.SimpleXElement._namespace">
            <summary>
            Backing field for optional XML namespace.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SimpleXElement.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SimpleXElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the element.
            </summary>
            <param name="elementName">The name of the element.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SimpleXElement.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the element.
            </summary>
            <param name="elementName">The name of the element.</param>
            <param name="ns">The XML namespace of the element.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SimpleXElement.#ctor(System.Xml.XmlReader)">
            <summary>
            Initializes a new instance of the class using the reader as the
            current root of the element.
            </summary>
            <param name="newElementReader">The XmlReader instance.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SimpleXElement.SetElementValue(System.String,System.String)">
            <summary>
            Sets the value of a new child element.
            </summary>
            <param name="elementName">The element name.</param>
            <param name="value">The value of the new element.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SimpleXElement.SetElementValue(System.String,System.String,System.String)">
            <summary>
            Sets the value of a new child element with an XML namespace value.
            </summary>
            <param name="elementName">The element name.</param>
            <param name="value">The value of the new element.</param>
            <param name="xmlNamespace">The XML namespace.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SimpleXElement.SetAttributeValue(System.String,System.String)">
            <summary>
            Sets the value of an attribute.
            </summary>
            <param name="attribute">The attribute name.</param>
            <param name="value">The attribute value.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SimpleXElement.SetValue(System.String)">
            <summary>
            Sets the value of the element.
            </summary>
            <param name="value">The new string value.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SimpleXElement.Attribute(System.String)">
            <summary>
            Gets an attribute value.
            </summary>
            <param name="name">The attribute name.</param>
            <returns>Returns an instance of the attribute value.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SimpleXElement.Add(Microsoft.Phone.Testing.Service.SimpleXElement)">
            <summary>
            Adds a child element to the simple element instance.
            </summary>
            <param name="child">The child element instance.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SimpleXElement.Descendants(System.String)">
            <summary>
            Returns descendants.
            </summary>
            <param name="elementName">The element name to look for.</param>
            <returns>Returns an enumeration of elements.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SimpleXElement.Parse(System.String)">
            <summary>
            Creates a new SimpleXElement.
            </summary>
            <param name="xml">XML content.</param>
            <returns>Returns a new instance of the element and children.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SimpleXElement.ParseInternal(System.Xml.XmlReader,System.Boolean)">
            <summary>
            Parses the current level with the XmlReader instance.
            </summary>
            <param name="reader">The reader instance.</param>
            <param name="isFirst">A value indicating whether this is the first
            parse. Actually this will always be true for now.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SimpleXElement.ToString">
            <summary>
            Generates the string representation of the element and its tree.
            </summary>
            <returns>Returns the string representation of the element.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.SimpleXElement.WriteElement(System.Xml.XmlWriter)">
            <summary>
            Writes to the XML writer without document start and ends.
            </summary>
            <param name="w">The writer instance.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.Service.SimpleXElement.Name">
            <summary>
            Gets the element name.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.Service.SimpleXElement.Value">
            <summary>
            Gets or sets the element text, if any.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.Service.TestReportingProvider">
            <summary>
            A test service that reports test run results.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.TestReportingProvider.#ctor(Microsoft.Phone.Testing.Harness.TestServiceProvider)">
            <summary>
            Initializes a new reporting provider instance.
            </summary>
            <param name="testService">The test service.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.TestReportingProvider.WriteLog(System.Action{Microsoft.Phone.Testing.Service.ServiceResult},System.String,System.String)">
            <summary>
            Begins a call to the test service to write to the log.
            </summary>
            <param name="callback">The callback, used to read or verify results 
            from the service call.</param>
            <param name="logName">The name of the log to write.</param>
            <param name="content">The log file content.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.Service.TestReportingProvider.ReportFinalResult(System.Action{Microsoft.Phone.Testing.Service.ServiceResult},System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
            Begins a call to the test service to report a test run's results.
            </summary>
            <param name="callback">The callback, used to read or verify results 
            from the service call.</param>
            <param name="failure">A value indicating whether the test run was a 
            failure.</param>
            <param name="failures">The failed scenario count.</param>
            <param name="totalScenarios">The total scenario count.</param>
            <param name="message">Any message to report along with the failure.</param>
        </member>
        <member name="T:Microsoft.Phone.Testing.Service.TestServiceFeature">
            <summary>
            Set of known, well-defined test service features.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Service.TestServiceFeature.RunSettings">
            <summary>
            Provides run parameters and settings.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Service.TestServiceFeature.TestReporting">
            <summary>
            Provides test reporting services.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.Service.TestServiceFeature.EnvironmentServices">
            <summary>
            Provides environment information.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.TagAttribute">
            <summary>
            Tag attribute used to associate individual test cases with tags to
            easily test related functionality.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.TagAttribute.ReservedWords">
            <summary>
            List of reserved words that cannot be used as tags.
            </summary>
            <remarks>
            This list should be shared with the tag parser implementation when
            available.
            </remarks>
        </member>
        <member name="F:Microsoft.Phone.Testing.TagAttribute.ReservedCharacters">
            <summary>
            List of reserved characters that cannot be used in tags.
            </summary>
            <remarks>
            This list should be shared with the tag parser implementation when
            available.
            </remarks>
        </member>
        <member name="M:Microsoft.Phone.Testing.TagAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TagAttribute class.
            </summary>
            <param name="tag">
            Tag associated with the test method or class.
            </param>
        </member>
        <member name="P:Microsoft.Phone.Testing.TagAttribute.Tag">
            <summary>
            Gets the tag associated with the test method or class.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.UnitTestSettings">
            <summary>
            Settings for the unit test system.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.UnitTestSettings.TagExpressionKey">
            <summary>
            The tag expression key name.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.UnitTestSettings.DefaultSortTestMethods">
            <summary>
            By default test methods are sorted.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.UnitTestSettings.DefaultSortTestClasses">
            <summary>
            By default test classes are sorted.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.UnitTestSettings._testService">
            <summary>
            Backing field for the test service.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.UnitTestSettings.#ctor">
            <summary>
            Settings for the unit test system.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.Parameters">
            <summary>
            Gets the parameters from the response file.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.Components">
            <summary>
            Gets the components initialized by the entry-point assembly. These
            are the dynamically loaded objects that may be needed by the
            TestHarness.
            </summary>
            <value>The components.</value>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.LogProviders">
            <summary>
            Gets the log providers.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.SampleTags">
            <summary>
            Gets or sets a set of sample tags for use in a tag editor screen.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.TestAssemblies">
            <summary>
            Gets the list of test assemblies.
            </summary>
            <value>The test assembly.</value>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.TestServiceSetterCalled">
            <summary>
            Gets or sets a value indicating whether the test service has been
            directly set.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.TestService">
            <summary>
            Gets or sets the test service provider.  The test service lights up 
            advanced out-of-process communication, reporting, logging, and 
            other valuable services.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.TestHarness">
            <summary>
            Gets or sets the test harness.
            </summary>
            <value>The test harness.</value>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.TestServiceHostname">
            <summary>
            Gets or sets the test service hostname to try using. Defaults to
            localhost.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.TestServicePort">
            <summary>
            Gets or sets the test service port to try using. Defaults to 8000.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.TestServicePath">
            <summary>
            Gets or sets the test service path to try using. Defaults to
            /externalInterface/.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.StartRunImmediately">
            <summary>
            Gets or sets a value indicating whether to start the run
            immediately when the test system is run. Defaults to false to enable
            the test service to load and information to be provided in the
            user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.TestPanelType">
            <summary>
            Gets or sets the type of the TestPanel to create. The type must
            derive from Microsoft.Phone.Testing.ITestPanel.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.SortTestMethods">
            <summary>
            Gets or sets a value indicating whether test methods are sorted 
            alphabetically. By default this value is true.
            </summary>
            <remarks>
            It is worth understanding that the order of unit test 
            execution should not affect the results of a test run.  Any expected
            ordering and verification from multiple test methods should be 
            refactored into a single unit test.
            </remarks>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.SortTestClasses">
            <summary>
            Gets or sets a value indicating whether test classes are sorted 
            alphabetically. This setting is True by default.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.ShowTagExpressionEditor">
            <summary>
            Gets or sets a value indicating whether to show the tag expression
            editor user interface before starting the test run.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.TagExpression">
            <summary>
            Gets or sets the tag expression used for selecting tests to run. 
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSettings.TestClassesToRun">
            <summary>
            Gets a list of test classes to run. Enables filtering.
            </summary>
            <remarks>This property should be considered obsolete.</remarks>
        </member>
        <member name="T:Microsoft.Phone.Testing.UnitTestSystem">
            <summary>
            A central entry point for unit test projects and applications.
            </summary>
            <summary>
            A central entry point for unit test projects and applications.
            </summary>
        </member>
        <member name="F:Microsoft.Phone.Testing.UnitTestSystem.UnitTestSystemName">
            <summary>
            Friendly unit test system name.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.UnitTestSystem.RegisterUnitTestProvider(Microsoft.Phone.Testing.Metadata.IUnitTestProvider)">
            <summary>
            Register another available unit test provider for the unit test system.
            </summary>
            <param name="provider">A unit test provider.</param>
        </member>
        <member name="F:Microsoft.Phone.Testing.UnitTestSystem._harness">
            <summary>
            Test harness instance.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.UnitTestSystem.Run(Microsoft.Phone.Testing.UnitTestSettings)">
            <summary>
            Start a new unit test run.
            </summary>
            <param name="settings">Unit test settings object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.UnitTestSystem.SetStandardLogProviders(Microsoft.Phone.Testing.UnitTestSettings)">
            <summary>
            Prepares the default log manager.
            </summary>
            <param name="settings">The test harness settings.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.UnitTestSystem.TryAddVisualStudioLogProvider(Microsoft.Phone.Testing.UnitTestSettings)">
            <summary>
            Tries to instantiate and initialize a VSTT provider. Requires that 
            XLinq is available and included in the application package.
            </summary>
            <param name="settings">The test harness settings object.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.UnitTestSystem.CreateDefaultSettings">
            <summary>
            Creates the default settings that would be used by the UnitTestHarness
            if none were specified.
            </summary>
            <returns>A new RootVisual.</returns>
            <remarks>Assumes the calling assembly is a test assembly.</remarks>
        </member>
        <member name="M:Microsoft.Phone.Testing.UnitTestSystem.OnTestHarnessCompleted(Microsoft.Phone.Testing.Harness.TestHarnessCompletedEventArgs)">
            <summary>
            Call the TestHarnessCompleted event.
            </summary>
            <param name="args">The test harness completed event arguments.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.UnitTestSystem.CreateDefaultSettings(System.Reflection.Assembly)">
            <summary>
            Create a default settings object for unit testing.
            </summary>
            <param name="callingAssembly">The assembly reflection object.</param>
            <returns>A unit test settings instance.</returns>
        </member>
        <member name="M:Microsoft.Phone.Testing.UnitTestSystem.PrepareCustomLogProviders(Microsoft.Phone.Testing.UnitTestSettings)">
            <summary>
            A partial method for PrepareDefaultLogManager.
            </summary>
            <param name="settings">The test harness settings.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.UnitTestSystem.SetTestService(Microsoft.Phone.Testing.UnitTestSettings)">
            <summary>
            A partial method for setting the TestService.
            </summary>
            <param name="settings">The test harness settings.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.UnitTestSystem.CreateTestPage">
            <summary>
            Creates a new TestPage visual that in turn will setup and begin a 
            unit test run.
            </summary>
            <returns>A new RootVisual.</returns>
            <remarks>Assumes the calling assembly is a test assembly.</remarks>
        </member>
        <member name="M:Microsoft.Phone.Testing.UnitTestSystem.CreateTestPage(Microsoft.Phone.Testing.UnitTestSettings)">
            <summary>
            Creates a new TestPage visual that in turn will setup and begin a 
            unit test run.
            </summary>
            <param name="settings">Test harness settings to be applied.</param>
            <returns>A new RootVisual.</returns>
            <remarks>Assumes the calling assembly is a test assembly.</remarks>
        </member>
        <member name="M:Microsoft.Phone.Testing.UnitTestSystem.MergeSettingsAndParameters(Microsoft.Phone.Testing.Harness.TestServiceProvider,Microsoft.Phone.Testing.UnitTestSettings)">
            <summary>
            Merge any settings provided by a test service with the parameters 
            that were passed inside the TestHarnessSettings.
            </summary>
            <param name="testService">The test service.</param>
            <param name="inputSettings">The run settings.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.UnitTestSystem.PrepareTestService(Microsoft.Phone.Testing.UnitTestSettings,System.Action)">
            <summary>
            Initializes the test service and its contained providers.
            </summary>
            <param name="inputSettings">The run settings.</param>
            <param name="complete">Action to call once the test service is 
            initialized and ready to continue the run's execution.</param>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSystem.SystemName">
            <summary>
            Gets the test system name built into the assembly.
            </summary>
        </member>
        <member name="P:Microsoft.Phone.Testing.UnitTestSystem.FrameworkFileVersion">
            <summary>
            Gets a string representing the file version attribute of the main
            unit test framework assembly, if present.
            </summary>
        </member>
        <member name="E:Microsoft.Phone.Testing.UnitTestSystem.TestHarnessCompleted">
            <summary>
            A completed test harness handler.
            </summary>
        </member>
        <member name="T:Microsoft.Phone.Testing.WorkItemExtensions">
            <summary>
            A class contains extension methods and helpers for dealing with WorkItem
            instances and improving framework performance.
            </summary>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItemExtensions.EnqueueQuickWorkItem(Microsoft.Phone.Testing.WorkItemTest,Microsoft.Phone.Testing.WorkItem)">
            <summary>
            Enqueues a work item into the task queue. The work item will run
            immediately following the previous work item, and may not leave any
            time before executing the next. This is a specialized method to be
            used for performance improvements.
            </summary>
            <param name="test">The work item test.</param>
            <param name="workItem">The unit of work.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItemExtensions.EnqueueQuickCallback(Microsoft.Phone.Testing.WorkItemTest,System.Action)">
            <summary>
            Enqueues a method into the task queue. The method will run
            immediately following the previous work item, and may not leave any
            time before executing the next. This is a specialized method to be
            used for performance improvements.
            </summary>
            <param name="test">The work item test.</param>
            <param name="callback">The callback action or method.</param>
        </member>
        <member name="M:Microsoft.Phone.Testing.WorkItemExtensions.EnqueueQuickConditional(Microsoft.Phone.Testing.WorkItemTest,System.Func{System.Boolean})">
            <summary>
            Enqueues a conditional statement into the task queue. The method will
            run immediately following the previous work item, and may not leave
            any time before executing the next. This is a specialized method to
            be used for performance improvements.
            </summary>
            <param name="test">The work item test.</param>
            <param name="conditional">The conditional function or statement.</param>
        </member>
    </members>
</doc>
