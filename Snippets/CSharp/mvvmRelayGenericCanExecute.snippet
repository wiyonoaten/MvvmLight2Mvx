<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>RelayCommand Generic</Title>
      <Author>Laurent Bugnion (GalaSoft)</Author>
      <Description>Creates and initializes a new generic RelayCommand with CanExecute delegate</Description>
      <HelpUrl>http://www.galasoft.ch/mvvm</HelpUrl>
      <Shortcut>mvvmrelaygenericcanexecute</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>attribute</ID>
          <ToolTip>Name of the attribute holding the RelayCommand.</ToolTip>
          <Default>_myCommand</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>commandname</ID>
          <ToolTip>Name of the RelayCommand.</ToolTip>
          <Default>MyCommand</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>type</ID>
          <ToolTip>Type of the RelayCommand's parameter.</ToolTip>
          <Default>string</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>param</ID>
          <ToolTip>Name of the RelayCommand's parameter.</ToolTip>
          <Default>p</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>true</ID>
          <ToolTip>true</ToolTip>
          <Default>true</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>tru</ID>
          <ToolTip>tru</ToolTip>
          <Default>tru</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>tr</ID>
          <ToolTip>tr</ToolTip>
          <Default>tr</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>t</ID>
          <ToolTip>t</ToolTip>
          <Default>t</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>c</ID>
          <ToolTip>c</ToolTip>
          <Default>c</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>ca</ID>
          <ToolTip>ca</ToolTip>
          <Default>ca</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>can</ID>
          <ToolTip>can</ToolTip>
          <Default>can</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>cane</ID>
          <ToolTip>cane</ToolTip>
          <Default>cane</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>canex</ID>
          <ToolTip>canex</ToolTip>
          <Default>canex</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>canexe</ID>
          <ToolTip>canexe</ToolTip>
          <Default>canexe</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>canexec</ID>
          <ToolTip>canexec</ToolTip>
          <Default>canexec</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>canexecu</ID>
          <ToolTip>canexecu</ToolTip>
          <Default>canexecu</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>canexecut</ID>
          <ToolTip>canexecut</ToolTip>
          <Default>canexecut</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>canexecute</ID>
          <ToolTip>canexecute</ToolTip>
          <Default>canexecute</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>canexecutev</ID>
          <ToolTip>canexecutev</ToolTip>
          <Default>canexecutev</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>canexecuteva</ID>
          <ToolTip>canexecuteva</ToolTip>
          <Default>canexecuteva</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>canexecuteval</ID>
          <ToolTip>canexecuteval</ToolTip>
          <Default>canexecuteval</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>canexecutevaly</ID>
          <ToolTip>canexecutevaly</ToolTip>
          <Default>canexecutevaly</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>canexecutevalye</ID>
          <ToolTip>canexecutevalye</ToolTip>
          <Default>canexecutevalye</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>canexecutevalu</ID>
          <ToolTip>canexecutevalu</ToolTip>
          <Default>canexecutevalu</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>canexecutevalue</ID>
          <ToolTip>canexecutevalue</ToolTip>
          <Default>canexecutevalue</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[private ICommand $attribute$;

        /// <summary>
        /// Gets the $commandname$.
        /// </summary>
        public ICommand $commandname$
        {
            get
            {
                return $attribute$ 
                    ?? ($attribute$ = new RelayCommand<$type$>(
                                          $param$ =>
                                          {
                                              $end$
                                          },
                                          $param$ => $canexecutevalue$));
            }
        }]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>